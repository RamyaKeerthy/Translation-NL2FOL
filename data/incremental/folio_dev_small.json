[
    {
        "id":"FOLIO_dev_380_1014",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: People in this club who perform in school talent shows often attend and are very engaged with school events.\nPeople in this club either perform in school talent shows often or are inactive and disinterested community members.\nPeople in this club who chaperone high school dances are not students who attend the school.\nAll people in this club who are inactive and disinterested members of their community chaperone high school dances.\nAll young children and teenagers in this club who wish to further their academic careers and educational opportunities are students who attend the school. \nBonnie is in this club and she either both attends and is very engaged with school events and is a student who attends the school or is not someone who both attends and is very engaged with school events and is not a student who attends the school.\nConclusion: Bonnie performs in school talent shows often.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (InThisClub(x) \u2227 PerformOftenIn(x, schoolTalentShow) \u2192 Attend(x, schoolEvent) \u2227 VeryEngagedWith(x, schoolEvent))\n\u2200x (InThisClub(x) \u2192 PerformOftenIn(x, schoolTalentShow) \u2295 (InActive(x) \u2227 Disinterested(x) \u2227 MemberOf(x, community)))\n\u2200x (InThisClub(x) \u2227 Chaperone(x, highSchoolDance) \u2192 \u00ac(Studen(x) \u2227 AttendSchool(x)))\n\u2200x (InThisClub(x) \u2227 (InActive(x) \u2227 Disinterested(x) \u2227 MemberOf(x, community)) \u2192 Chaperone(x, highSchoolDances))\n\u2200x (InThisClub(x) \u2227 (YoungChildren(x) \u2295 Teenager(x)) \u2227 WishToFurther(x, academicCareer)) \u2192 Studen(x) \u2227 AttendSchool(x))\nInThisClub(bonnie) \u2227 \u00ac((Attend(x, schoolEvent) \u2227 VeryEngagedWith(bonnie, schoolEvent)) \u2295 (Studen(bonne) \u2227 AttendSchool(bonnie)))\nConclusion_FOL: InThisClub(bonnie) \u2227 (Perform(bonnie, schoolTalentShow))"
    },
    {
        "id":"FOLIO_dev_380_1015",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: People in this club who perform in school talent shows often attend and are very engaged with school events.\nPeople in this club either perform in school talent shows often or are inactive and disinterested community members.\nPeople in this club who chaperone high school dances are not students who attend the school.\nAll people in this club who are inactive and disinterested members of their community chaperone high school dances.\nAll young children and teenagers in this club who wish to further their academic careers and educational opportunities are students who attend the school. \nBonnie is in this club and she either both attends and is very engaged with school events and is a student who attends the school or is not someone who both attends and is very engaged with school events and is not a student who attends the school.\nConclusion: If Bonnie is either both a young child or teenager who wishes to further her academic career and educational opportunities and chaperones high school dances or neither is a young child nor teenager who wishes to further her academic career and educational opportunities, then Bonnie is either a student who attends the school or is an inactive and disinterested member of the community.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (InThisClub(x) \u2227 PerformOftenIn(x, schoolTalentShow) \u2192 Attend(x, schoolEvent) \u2227 VeryEngagedWith(x, schoolEvent))\n\u2200x (InThisClub(x) \u2192 PerformOftenIn(x, schoolTalentShow) \u2295 (InActive(x) \u2227 Disinterested(x) \u2227 MemberOf(x, community)))\n\u2200x (InThisClub(x) \u2227 Chaperone(x, highSchoolDance) \u2192 \u00ac(Studen(x) \u2227 AttendSchool(x)))\n\u2200x (InThisClub(x) \u2227 (InActive(x) \u2227 Disinterested(x) \u2227 MemberOf(x, community)) \u2192 Chaperone(x, highSchoolDances))\n\u2200x (InThisClub(x) \u2227 (YoungChildren(x) \u2295 Teenager(x)) \u2227 WishToFurther(x, academicCareer)) \u2192 Studen(x) \u2227 AttendSchool(x))\nInThisClub(bonnie) \u2227 \u00ac((Attend(x, schoolEvent) \u2227 VeryEngagedWith(bonnie, schoolEvent)) \u2295 (Studen(bonne) \u2227 AttendSchool(bonnie)))\nConclusion_FOL: \u00ac((YoungChildren(bonnie) \u2295 Teenager(bonnie)) \u2227 WishToFurther(bonnie, academicCareer)) \u2295 Chaperone(bonnie, highSchoolDance)) \u2192 (Studen(x) \u2227 AttendSchool(x)) \u2295 (YoungChildren(bonnie) \u2295 Teenager(bonnie)) \u2227 WishToFurther(bonnie, academicCareer))"
    },
    {
        "id":"FOLIO_dev_380_1016",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: People in this club who perform in school talent shows often attend and are very engaged with school events.\nPeople in this club either perform in school talent shows often or are inactive and disinterested community members.\nPeople in this club who chaperone high school dances are not students who attend the school.\nAll people in this club who are inactive and disinterested members of their community chaperone high school dances.\nAll young children and teenagers in this club who wish to further their academic careers and educational opportunities are students who attend the school. \nBonnie is in this club and she either both attends and is very engaged with school events and is a student who attends the school or is not someone who both attends and is very engaged with school events and is not a student who attends the school.\nConclusion: If Bonnie either chaperones high school dances or, if she does not, she performs in school talent shows often, then Bonnie is both a young child or teenager who wishes to further her academic career and educational opportunities and an inactive and disinterested member of the community.",
        "output":"False",
        "fol":"Premise_FOL: \u2200x (InThisClub(x) \u2227 PerformOftenIn(x, schoolTalentShow) \u2192 Attend(x, schoolEvent) \u2227 VeryEngagedWith(x, schoolEvent))\n\u2200x (InThisClub(x) \u2192 PerformOftenIn(x, schoolTalentShow) \u2295 (InActive(x) \u2227 Disinterested(x) \u2227 MemberOf(x, community)))\n\u2200x (InThisClub(x) \u2227 Chaperone(x, highSchoolDance) \u2192 \u00ac(Studen(x) \u2227 AttendSchool(x)))\n\u2200x (InThisClub(x) \u2227 (InActive(x) \u2227 Disinterested(x) \u2227 MemberOf(x, community)) \u2192 Chaperone(x, highSchoolDances))\n\u2200x (InThisClub(x) \u2227 (YoungChildren(x) \u2295 Teenager(x)) \u2227 WishToFurther(x, academicCareer)) \u2192 Studen(x) \u2227 AttendSchool(x))\nInThisClub(bonnie) \u2227 \u00ac((Attend(x, schoolEvent) \u2227 VeryEngagedWith(bonnie, schoolEvent)) \u2295 (Studen(bonne) \u2227 AttendSchool(bonnie)))\nConclusion_FOL: (Chaperone(bonnie, highSchoolDance) \u2295 Perform(bonnie, schoolTalentShow)) \u2192 (YoungChildren(bonnie) \u2295 Teenager(bonnie)) \u2227 WishToFurther(bonnie, academicCareer)) \u2227 (InActive(bonnie) \u2227 Disinterested(bonnie) \u2227 MemberOf(bonnie, community))"
    },
    {
        "id":"FOLIO_dev_426_1208",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All employees who schedule a meeting with their customers will go to the company building today. \nEveryone who has lunch in the company building schedules meetings with their customers. \nEmployees have lunch either in the company building or at home.\nIf an employee has lunch at home, they are working remotely from home.\nAll employees who are in other countries work remotely from home. \nNo managers work remotely from home. \nJames will appear in the company today if and only if he is a manager.\nConclusion: James has lunch in the company.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x ((Employee(x) \u2227 Schedule(x, meeting, customers)) \u2192 AppearIn(x, company))\n\u2200x ((Employee(x) \u2227 HasLunch(x, company)) \u2192 Schedule(x, meeting, customers))\n\u2200x (Employee(x) \u2192 (HasLunch(x, company) \u2295 HasLunch(x, home)))\n\u2200x ((Employee(x) \u2227 HasLunch(x, home)) \u2192 Work(x, home))\n\u2200x ((Employee(x) \u2227 (\u00acIn(x, homecountry))) \u2192 Work(x, home))\n\u2200x (Manager(x) \u2192 \u00acWork(x, home))\n\u00ac(Manager(james) \u2295 AppearIn(james, company))\nConclusion_FOL: HasLunch(james, company)"
    },
    {
        "id":"FOLIO_dev_426_1209",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All employees who schedule a meeting with their customers will go to the company building today. \nEveryone who has lunch in the company building schedules meetings with their customers. \nEmployees have lunch either in the company building or at home.\nIf an employee has lunch at home, they are working remotely from home.\nAll employees who are in other countries work remotely from home. \nNo managers work remotely from home. \nJames will appear in the company today if and only if he is a manager.\nConclusion: James does not have lunch in the company.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x ((Employee(x) \u2227 Schedule(x, meeting, customers)) \u2192 AppearIn(x, company))\n\u2200x ((Employee(x) \u2227 HasLunch(x, company)) \u2192 Schedule(x, meeting, customers))\n\u2200x (Employee(x) \u2192 (HasLunch(x, company) \u2295 HasLunch(x, home)))\n\u2200x ((Employee(x) \u2227 HasLunch(x, home)) \u2192 Work(x, home))\n\u2200x ((Employee(x) \u2227 (\u00acIn(x, homecountry))) \u2192 Work(x, home))\n\u2200x (Manager(x) \u2192 \u00acWork(x, home))\n\u00ac(Manager(james) \u2295 AppearIn(james, company))\nConclusion_FOL: \u00acHasLunch(james, company)"
    },
    {
        "id":"FOLIO_dev_426_1210",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All employees who schedule a meeting with their customers will go to the company building today. \nEveryone who has lunch in the company building schedules meetings with their customers. \nEmployees have lunch either in the company building or at home.\nIf an employee has lunch at home, they are working remotely from home.\nAll employees who are in other countries work remotely from home. \nNo managers work remotely from home. \nJames will appear in the company today if and only if he is a manager.\nConclusion: If James is either a manager or in other countries,  then James does not either has lunch at home or work remotely from home. If James either has lunch at home or works remotely from home, then he is neither a manager nor does he work in other countries. [contrapositive is more natural]",
        "output":"True",
        "fol":"Premise_FOL: \u2200x ((Employee(x) \u2227 Schedule(x, meeting, customers)) \u2192 AppearIn(x, company))\n\u2200x ((Employee(x) \u2227 HasLunch(x, company)) \u2192 Schedule(x, meeting, customers))\n\u2200x (Employee(x) \u2192 (HasLunch(x, company) \u2295 HasLunch(x, home)))\n\u2200x ((Employee(x) \u2227 HasLunch(x, home)) \u2192 Work(x, home))\n\u2200x ((Employee(x) \u2227 (\u00acIn(x, homecountry))) \u2192 Work(x, home))\n\u2200x (Manager(x) \u2192 \u00acWork(x, home))\n\u00ac(Manager(james) \u2295 AppearIn(james, company))\nConclusion_FOL: Manager(james) \u2192 \u00acWork(james, home)"
    },
    {
        "id":"FOLIO_dev_198_563",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: When the Monkeypox virus occurs in a being, it may get Monkeypox. \nMonkeypox virus can occur in certain animals.\nHumans are mammals.\nMammals are animals.\nSymptoms of Monkeypox include fever, headache, muscle pains, and tiredness. \nPeople feel tired when they get the flu.\nConclusion: There is an animal.",
        "output":"True",
        "fol":"Premise_FOL: \u2203x (OccurIn(monkeypoxVirus, x) \u2227 Get(x, monkeypoxVirus))\n\u2203x (Animal(x) \u2227 OccurIn(monkeypoxVirus, x))\n\u2200x (Human(x) \u2192 Mammal(x))\n\u2200x (Mammal(x) \u2192 Animal(x))\n\u2203x (SymptonOf(x, monkeypoxVirus) \u2227 (Fever(x) \u2228 Headache(x) \u2228 MusclePain(x) \u2228 Tired(x)))\n\u2200x (Human(x) \u2227 Get(x, flu) \u2192 Feel(x, tired))\nConclusion_FOL: \u2203x (Animal(x))"
    },
    {
        "id":"FOLIO_dev_198_564",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: When the Monkeypox virus occurs in a being, it may get Monkeypox. \nMonkeypox virus can occur in certain animals.\nHumans are mammals.\nMammals are animals.\nSymptoms of Monkeypox include fever, headache, muscle pains, and tiredness. \nPeople feel tired when they get the flu.\nConclusion: No one gets the flu.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2203x (OccurIn(monkeypoxVirus, x) \u2227 Get(x, monkeypoxVirus))\n\u2203x (Animal(x) \u2227 OccurIn(monkeypoxVirus, x))\n\u2200x (Human(x) \u2192 Mammal(x))\n\u2200x (Mammal(x) \u2192 Animal(x))\n\u2203x (SymptonOf(x, monkeypoxVirus) \u2227 (Fever(x) \u2228 Headache(x) \u2228 MusclePain(x) \u2228 Tired(x)))\n\u2200x (Human(x) \u2227 Get(x, flu) \u2192 Feel(x, tired))\nConclusion_FOL: \u2200x (Human(x) \u2192 \u00acGet(x, flu))"
    },
    {
        "id":"FOLIO_dev_198_565",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: When the Monkeypox virus occurs in a being, it may get Monkeypox. \nMonkeypox virus can occur in certain animals.\nHumans are mammals.\nMammals are animals.\nSymptoms of Monkeypox include fever, headache, muscle pains, and tiredness. \nPeople feel tired when they get the flu.\nConclusion: Symptoms of Monkeypox include coughing.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2203x (OccurIn(monkeypoxVirus, x) \u2227 Get(x, monkeypoxVirus))\n\u2203x (Animal(x) \u2227 OccurIn(monkeypoxVirus, x))\n\u2200x (Human(x) \u2192 Mammal(x))\n\u2200x (Mammal(x) \u2192 Animal(x))\n\u2203x (SymptonOf(x, monkeypoxVirus) \u2227 (Fever(x) \u2228 Headache(x) \u2228 MusclePain(x) \u2228 Tired(x)))\n\u2200x (Human(x) \u2227 Get(x, flu) \u2192 Feel(x, tired))\nConclusion_FOL: \u2203x (SymptonOf(x, monkeypoxVirus) \u2227 Coughing(x))"
    },
    {
        "id":"FOLIO_dev_0_0",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: There are six types of wild turkeys: Eastern wild turkey, Osceola wild turkey, Gould\u2019s wild turkey, Merriam\u2019s wild turkey, Rio Grande wild turkey, and Ocellated wild turkey.\nTom is not an Eastern wild turkey.\nTom is not an Osceola wild turkey.\nTom is not a Gould's wild turkey.\nTom is neither a Merriam's wild turkey nor a Rio Grande wild turkey.\nTom is a wild turkey.\nConclusion: Tom is an Ocellated wild turkey.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (WildTurkey(x) \u2192 (EasternWildTurkey(x) \u2228 OsceolaWildTurkey(x) \u2228 GouldsWildTurkey(x) \u2228 MerriamsWildTurkey(x) \u2228 RiograndeWildTurkey(x) \u2228 OcellatedWildTurkey(x)))\n\u00ac(EasternWildTurkey(tom))\n\u00ac(OsceolaWildTurkey(tom))\n\u00ac(GouldsWildTurkey(tom))\n\u00ac(MerriamsWildTurkey(tom) \u2228 RiograndeWildTurkey(tom))\nWildTurkey(tom)\nConclusion_FOL: OcellatedWildTurkey(tom)"
    },
    {
        "id":"FOLIO_dev_0_1",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: There are six types of wild turkeys: Eastern wild turkey, Osceola wild turkey, Gould\u2019s wild turkey, Merriam\u2019s wild turkey, Rio Grande wild turkey, and Ocellated wild turkey.\nTom is not an Eastern wild turkey.\nTom is not an Osceola wild turkey.\nTom is not a Gould's wild turkey.\nTom is neither a Merriam's wild turkey nor a Rio Grande wild turkey.\nTom is a wild turkey.\nConclusion: Tom is an Eastern wild turkey.",
        "output":"False",
        "fol":"Premise_FOL: \u2200x (WildTurkey(x) \u2192 (EasternWildTurkey(x) \u2228 OsceolaWildTurkey(x) \u2228 GouldsWildTurkey(x) \u2228 MerriamsWildTurkey(x) \u2228 RiograndeWildTurkey(x) \u2228 OcellatedWildTurkey(x)))\n\u00ac(EasternWildTurkey(tom))\n\u00ac(OsceolaWildTurkey(tom))\n\u00ac(GouldsWildTurkey(tom))\n\u00ac(MerriamsWildTurkey(tom) \u2228 RiograndeWildTurkey(tom))\nWildTurkey(tom)\nConclusion_FOL: EasternWildTurkey(tom)"
    },
    {
        "id":"FOLIO_dev_0_2",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: There are six types of wild turkeys: Eastern wild turkey, Osceola wild turkey, Gould\u2019s wild turkey, Merriam\u2019s wild turkey, Rio Grande wild turkey, and Ocellated wild turkey.\nTom is not an Eastern wild turkey.\nTom is not an Osceola wild turkey.\nTom is not a Gould's wild turkey.\nTom is neither a Merriam's wild turkey nor a Rio Grande wild turkey.\nTom is a wild turkey.\nConclusion: Joey is a wild turkey.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (WildTurkey(x) \u2192 (EasternWildTurkey(x) \u2228 OsceolaWildTurkey(x) \u2228 GouldsWildTurkey(x) \u2228 MerriamsWildTurkey(x) \u2228 RiograndeWildTurkey(x) \u2228 OcellatedWildTurkey(x)))\n\u00ac(EasternWildTurkey(tom))\n\u00ac(OsceolaWildTurkey(tom))\n\u00ac(GouldsWildTurkey(tom))\n\u00ac(MerriamsWildTurkey(tom) \u2228 RiograndeWildTurkey(tom))\nWildTurkey(tom)\nConclusion_FOL: WildTurkey(joey)"
    },
    {
        "id":"FOLIO_dev_20_57",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: A Japanese game company created the game the Legend of Zelda.\nAll games on the Top 10 list are made by Japanese game companies.\nIf a game sells more than one million copies, then it will be included in the Top 10 list.\nThe Legend of Zelda sold more than one million copies.\nConclusion: The Legend of Zelda is on the Top 10 list.",
        "output":"True",
        "fol":"Premise_FOL: Game(theLegendofZelda) \u2227 \u2203x (Japanese(x) \u2227 VideoGameCompany(x) \u2227 Created(x, theLegendofZelda))\n\u2200x \u2200y ((Game(x) \u2227 InTop10(x) \u2227 Created(y,x)) \u2192 Japanese(y))\n\u2200x ((Game(x) \u2227 \u2203y(GreaterThan(y, oneMillion) \u2227 CopiesSold(x, y))) \u2192 Top10(x)))\n\u2203y(GreaterThan(y, oneMillion) \u2227 CopiesSold(theLegendofZelda,y))\nConclusion_FOL: Top10(thelegendofzelda)"
    },
    {
        "id":"FOLIO_dev_20_58",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: A Japanese game company created the game the Legend of Zelda.\nAll games on the Top 10 list are made by Japanese game companies.\nIf a game sells more than one million copies, then it will be included in the Top 10 list.\nThe Legend of Zelda sold more than one million copies.\nConclusion: FIFA 22 is made by a Japanese video game company.",
        "output":"Uncertain",
        "fol":"Premise_FOL: Game(theLegendofZelda) \u2227 \u2203x (Japanese(x) \u2227 VideoGameCompany(x) \u2227 Created(x, theLegendofZelda))\n\u2200x \u2200y ((Game(x) \u2227 InTop10(x) \u2227 Created(y,x)) \u2192 Japanese(y))\n\u2200x ((Game(x) \u2227 \u2203y(GreaterThan(y, oneMillion) \u2227 CopiesSold(x, y))) \u2192 Top10(x)))\n\u2203y(GreaterThan(y, oneMillion) \u2227 CopiesSold(theLegendofZelda,y))\nConclusion_FOL: \u2203x(Created(x, fifa22) \u2227 Japanese(x) \u2227 VideoGameCompany(x))"
    },
    {
        "id":"FOLIO_dev_20_59",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: A Japanese game company created the game the Legend of Zelda.\nAll games on the Top 10 list are made by Japanese game companies.\nIf a game sells more than one million copies, then it will be included in the Top 10 list.\nThe Legend of Zelda sold more than one million copies.\nConclusion: The Legend of Zelda is not on the Top 10 list.",
        "output":"False",
        "fol":"Premise_FOL: Game(theLegendofZelda) \u2227 \u2203x (Japanese(x) \u2227 VideoGameCompany(x) \u2227 Created(x, theLegendofZelda))\n\u2200x \u2200y ((Game(x) \u2227 InTop10(x) \u2227 Created(y,x)) \u2192 Japanese(y))\n\u2200x ((Game(x) \u2227 \u2203y(GreaterThan(y, oneMillion) \u2227 CopiesSold(x, y))) \u2192 Top10(x)))\n\u2203y(GreaterThan(y, oneMillion) \u2227 CopiesSold(theLegendofZelda,y))\nConclusion_FOL: \u00acTop10(thelegendofzelda)"
    },
    {
        "id":"FOLIO_dev_282_726",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All squares are four-sided.\nAll four-sided things are shapes. \nConclusion: All squares are shapes.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (Square(x) \u2192 FourSided(x))\n\u2200x (FourSided(x) \u2192 Shape(x))\nConclusion_FOL: \u2200x (Square(x) \u2192 Shape(x))"
    },
    {
        "id":"FOLIO_dev_471_1361",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All rabbits that can be spotted near the campus are cute. \nSome turtles can be spotted near the campus. \nThe only animals that can be spotted near the campus are rabbits and squirrels.\nIf something is skittish, then it is not calm.\nAll the squirrels that can be spotted near the campus are skittish.\nRockie can be spotted near the campus, and it is calm.\nConclusion: Rockie is a turtle.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (Rabbit(x) \u2227 CanBeSpottedNear(x, campus) \u2192 Cute(x))\n\u2203x (Turtle(x) \u2227 CanBeSpottedNear(x, campus))\n\u2200x (CanBeSpottedNear(x, campus) \u2192 (Rabbit(x) \u2295 Squirrel(x)))\n\u2200x (Skittish(x) \u2192 \u00acCalm(x))\n\u2200x (Squirrel(x) \u2227 CanBeSpottedNear(x, campus) \u2192 Skittish(x))\nCanBeSpottedNear(rockie, campus) \u2227 Calm(rockie) \nConclusion_FOL: Turtle(rockie)"
    },
    {
        "id":"FOLIO_dev_471_1362",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All rabbits that can be spotted near the campus are cute. \nSome turtles can be spotted near the campus. \nThe only animals that can be spotted near the campus are rabbits and squirrels.\nIf something is skittish, then it is not calm.\nAll the squirrels that can be spotted near the campus are skittish.\nRockie can be spotted near the campus, and it is calm.\nConclusion: Rockie is not a turtle.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (Rabbit(x) \u2227 CanBeSpottedNear(x, campus) \u2192 Cute(x))\n\u2203x (Turtle(x) \u2227 CanBeSpottedNear(x, campus))\n\u2200x (CanBeSpottedNear(x, campus) \u2192 (Rabbit(x) \u2295 Squirrel(x)))\n\u2200x (Skittish(x) \u2192 \u00acCalm(x))\n\u2200x (Squirrel(x) \u2227 CanBeSpottedNear(x, campus) \u2192 Skittish(x))\nCanBeSpottedNear(rockie, campus) \u2227 Calm(rockie) \nConclusion_FOL: \u00acTurtle(rockie)"
    },
    {
        "id":"FOLIO_dev_471_1363",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All rabbits that can be spotted near the campus are cute. \nSome turtles can be spotted near the campus. \nThe only animals that can be spotted near the campus are rabbits and squirrels.\nIf something is skittish, then it is not calm.\nAll the squirrels that can be spotted near the campus are skittish.\nRockie can be spotted near the campus, and it is calm.\nConclusion: Rockie is a turtle or cute.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (Rabbit(x) \u2227 CanBeSpottedNear(x, campus) \u2192 Cute(x))\n\u2203x (Turtle(x) \u2227 CanBeSpottedNear(x, campus))\n\u2200x (CanBeSpottedNear(x, campus) \u2192 (Rabbit(x) \u2295 Squirrel(x)))\n\u2200x (Skittish(x) \u2192 \u00acCalm(x))\n\u2200x (Squirrel(x) \u2227 CanBeSpottedNear(x, campus) \u2192 Skittish(x))\nCanBeSpottedNear(rockie, campus) \u2227 Calm(rockie) \nConclusion_FOL: Turtle(rockie) \u2228 Cute(rockie)"
    },
    {
        "id":"FOLIO_dev_471_1364",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All rabbits that can be spotted near the campus are cute. \nSome turtles can be spotted near the campus. \nThe only animals that can be spotted near the campus are rabbits and squirrels.\nIf something is skittish, then it is not calm.\nAll the squirrels that can be spotted near the campus are skittish.\nRockie can be spotted near the campus, and it is calm.\nConclusion: If Rockie is not both a turtle and a squirrel, then Rockie is either cute or skittish.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (Rabbit(x) \u2227 CanBeSpottedNear(x, campus) \u2192 Cute(x))\n\u2203x (Turtle(x) \u2227 CanBeSpottedNear(x, campus))\n\u2200x (CanBeSpottedNear(x, campus) \u2192 (Rabbit(x) \u2295 Squirrel(x)))\n\u2200x (Skittish(x) \u2192 \u00acCalm(x))\n\u2200x (Squirrel(x) \u2227 CanBeSpottedNear(x, campus) \u2192 Skittish(x))\nCanBeSpottedNear(rockie, campus) \u2227 Calm(rockie) \nConclusion_FOL: \u00ac(Turtle(rockie) \u2227 Squirrel(rockie)) \u2192 Cute(rockie) \u2295 Skittish(rockie)"
    },
    {
        "id":"FOLIO_dev_471_1365",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All rabbits that can be spotted near the campus are cute. \nSome turtles can be spotted near the campus. \nThe only animals that can be spotted near the campus are rabbits and squirrels.\nIf something is skittish, then it is not calm.\nAll the squirrels that can be spotted near the campus are skittish.\nRockie can be spotted near the campus, and it is calm.\nConclusion: If Rockie is cute and calm, then Rockie is a skittish turtle.",
        "output":"False",
        "fol":"Premise_FOL: \u2200x (Rabbit(x) \u2227 CanBeSpottedNear(x, campus) \u2192 Cute(x))\n\u2203x (Turtle(x) \u2227 CanBeSpottedNear(x, campus))\n\u2200x (CanBeSpottedNear(x, campus) \u2192 (Rabbit(x) \u2295 Squirrel(x)))\n\u2200x (Skittish(x) \u2192 \u00acCalm(x))\n\u2200x (Squirrel(x) \u2227 CanBeSpottedNear(x, campus) \u2192 Skittish(x))\nCanBeSpottedNear(rockie, campus) \u2227 Calm(rockie) \nConclusion_FOL: Cute(rockie) \u2227 Calm(rockie) \u2192 Turtle(rockie) \u2227 Skittish(rockie)"
    },
    {
        "id":"FOLIO_dev_184_530",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: \"Stranger Things\" is a popular Netflix show.\nIf a Netflix show is popular, Karen will binge-watch it.\nIf and only if Karen binge-watches a Netflix show, she will download it.\nKaren does not download \"Black Mirror.\"\n\"Black Mirror\" is a Netflix show.\nIf Karen binge-watches a Netflix show, she will share it with Lisa.\nConclusion: Karen will share \"Stranger Things\" with Lisa.",
        "output":"True",
        "fol":"Premise_FOL: NetflixShow(strangerThings) \u2227 Popular(strangerThings)\n\u2200x ((NetflixShow(x) \u2227 Popular(x)) \u2192 BingeWatch(karen, x))\n\u2200x ((NetflixShow(x) \u2227 BingeWatch(karen, x)) \u2194 Download(karen, x))\n\u00acDownload(karen, blackMirror)\nNetflixShow(blackMirror)\n\u2200x ((NetflixShow(x) \u2227 BingeWatch(karen, x)) \u2192 ShareWith(karen, x, lisa))\nConclusion_FOL: ShareWith(karen, strangerThings, lisa)"
    },
    {
        "id":"FOLIO_dev_184_531",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: \"Stranger Things\" is a popular Netflix show.\nIf a Netflix show is popular, Karen will binge-watch it.\nIf and only if Karen binge-watches a Netflix show, she will download it.\nKaren does not download \"Black Mirror.\"\n\"Black Mirror\" is a Netflix show.\nIf Karen binge-watches a Netflix show, she will share it with Lisa.\nConclusion: \"Black Mirror\" is popular.",
        "output":"False",
        "fol":"Premise_FOL: NetflixShow(strangerThings) \u2227 Popular(strangerThings)\n\u2200x ((NetflixShow(x) \u2227 Popular(x)) \u2192 BingeWatch(karen, x))\n\u2200x ((NetflixShow(x) \u2227 BingeWatch(karen, x)) \u2194 Download(karen, x))\n\u00acDownload(karen, blackMirror)\nNetflixShow(blackMirror)\n\u2200x ((NetflixShow(x) \u2227 BingeWatch(karen, x)) \u2192 ShareWith(karen, x, lisa))\nConclusion_FOL: Popular(blackMirror)"
    },
    {
        "id":"FOLIO_dev_184_532",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: \"Stranger Things\" is a popular Netflix show.\nIf a Netflix show is popular, Karen will binge-watch it.\nIf and only if Karen binge-watches a Netflix show, she will download it.\nKaren does not download \"Black Mirror.\"\n\"Black Mirror\" is a Netflix show.\nIf Karen binge-watches a Netflix show, she will share it with Lisa.\nConclusion: Karen will share \"Black Mirror\" with Lisa.",
        "output":"Uncertain",
        "fol":"Premise_FOL: NetflixShow(strangerThings) \u2227 Popular(strangerThings)\n\u2200x ((NetflixShow(x) \u2227 Popular(x)) \u2192 BingeWatch(karen, x))\n\u2200x ((NetflixShow(x) \u2227 BingeWatch(karen, x)) \u2194 Download(karen, x))\n\u00acDownload(karen, blackMirror)\nNetflixShow(blackMirror)\n\u2200x ((NetflixShow(x) \u2227 BingeWatch(karen, x)) \u2192 ShareWith(karen, x, lisa))\nConclusion_FOL: ShareWith(karen, blackMirror, lisa)"
    },
    {
        "id":"FOLIO_dev_232_657",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Beijing is the capital of the People's Republic of China. \nBeijing is the capital city of the world's most populous nation.\nBeijing is located in Northern China.\nBeijing hosted the 2008 Summer Olympics and 2008 Summer Paralympics Games.\nBeijing has hosted the Summer and Winter Olympics and the Summer and Winter Paralympics.\nMany of Beijing's 91 universities consistently rank among the best universities in the world.\nConclusion: Beijing hosted both the 2008 Summer Olympics and the Winter Olympics.",
        "output":"True",
        "fol":"Premise_FOL: CapitalOf(beijing, peoplesRepublicOfChina)\n\u2203x (CapitalOf(beijing, x) \u2192 WorldsMostPopulousNation(x))\nLocatedIn(beijing, northernChina)\nHosted(beijing, 2008SummerOlympics) \u2227 Hosted(beijing, 2008SummerParalympicGames)\nHosted(beijing, summerOlympics) \u2227 Hosted(beijing, winterOlympics) \u2227 Hosted(beijing, summerParalympicGames)  \u2227 Hosted(beijing, winterParalympicGames)\n\u2203x (University(x) \u2227 InBeijing(x) \u2227 ConsistentlyRankAmongTheBestIn(x, theWorld))\nConclusion_FOL: Hosted(beijing, summerOlympics) \u2227 Hosted(beijing, winterOlympics)"
    },
    {
        "id":"FOLIO_dev_232_658",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Beijing is the capital of the People's Republic of China. \nBeijing is the capital city of the world's most populous nation.\nBeijing is located in Northern China.\nBeijing hosted the 2008 Summer Olympics and 2008 Summer Paralympics Games.\nBeijing has hosted the Summer and Winter Olympics and the Summer and Winter Paralympics.\nMany of Beijing's 91 universities consistently rank among the best universities in the world.\nConclusion: Beijing is located in southern China.",
        "output":"Uncertain",
        "fol":"Premise_FOL: CapitalOf(beijing, peoplesRepublicOfChina)\n\u2203x (CapitalOf(beijing, x) \u2192 WorldsMostPopulousNation(x))\nLocatedIn(beijing, northernChina)\nHosted(beijing, 2008SummerOlympics) \u2227 Hosted(beijing, 2008SummerParalympicGames)\nHosted(beijing, summerOlympics) \u2227 Hosted(beijing, winterOlympics) \u2227 Hosted(beijing, summerParalympicGames)  \u2227 Hosted(beijing, winterParalympicGames)\n\u2203x (University(x) \u2227 InBeijing(x) \u2227 ConsistentlyRankAmongTheBestIn(x, theWorld))\nConclusion_FOL: LocatedIn(beijing, southernChina)"
    },
    {
        "id":"FOLIO_dev_232_659",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Beijing is the capital of the People's Republic of China. \nBeijing is the capital city of the world's most populous nation.\nBeijing is located in Northern China.\nBeijing hosted the 2008 Summer Olympics and 2008 Summer Paralympics Games.\nBeijing has hosted the Summer and Winter Olympics and the Summer and Winter Paralympics.\nMany of Beijing's 91 universities consistently rank among the best universities in the world.\nConclusion: Beijing is the second largest Chinese city.",
        "output":"Uncertain",
        "fol":"Premise_FOL: CapitalOf(beijing, peoplesRepublicOfChina)\n\u2203x (CapitalOf(beijing, x) \u2192 WorldsMostPopulousNation(x))\nLocatedIn(beijing, northernChina)\nHosted(beijing, 2008SummerOlympics) \u2227 Hosted(beijing, 2008SummerParalympicGames)\nHosted(beijing, summerOlympics) \u2227 Hosted(beijing, winterOlympics) \u2227 Hosted(beijing, summerParalympicGames)  \u2227 Hosted(beijing, winterParalympicGames)\n\u2203x (University(x) \u2227 InBeijing(x) \u2227 ConsistentlyRankAmongTheBestIn(x, theWorld))\nConclusion_FOL: SecondLargestChineseCity(beijing)"
    },
    {
        "id":"FOLIO_dev_452_1301",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All aliens are extraterrestrials.\nIf someone is from Mars, then they are an alien.\nNo extraterrestrials are human.\nAll highly intelligent beings from Earth are humans.\nMarvin is a highly intelligent being.\nMarvin is either from Earth and from Mars, or he is from neither.\nIf Marvin is not from Earth, then Marvin is an extraterrestrial.\nConclusion: Marvin is an alien.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (Alien(x) \u2192 Extraterrestrial(x))\n\u2200x (From(x, mars) \u2192 Alien(x))\n\u2200x (Extraterrestrial(x) \u2192 \u00acHuman(x))\n\u2200x (HighlyIntelligentBeing(x) \u2227 From(x, earth) \u2192 Human(x))\nHighlyIntelligentBeing(marvin)\n\u00ac(From(marvin, earth) \u2295 From(marvin, mars))\n\u00acFrom(marvin, earth) \u2192 Extraterrestrial(marvin)\nConclusion_FOL: Alien(marvin)"
    },
    {
        "id":"FOLIO_dev_452_1302",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All aliens are extraterrestrials.\nIf someone is from Mars, then they are an alien.\nNo extraterrestrials are human.\nAll highly intelligent beings from Earth are humans.\nMarvin is a highly intelligent being.\nMarvin is either from Earth and from Mars, or he is from neither.\nIf Marvin is not from Earth, then Marvin is an extraterrestrial.\nConclusion: Marvin is neither a human nor from Mars.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (Alien(x) \u2192 Extraterrestrial(x))\n\u2200x (From(x, mars) \u2192 Alien(x))\n\u2200x (Extraterrestrial(x) \u2192 \u00acHuman(x))\n\u2200x (HighlyIntelligentBeing(x) \u2227 From(x, earth) \u2192 Human(x))\nHighlyIntelligentBeing(marvin)\n\u00ac(From(marvin, earth) \u2295 From(marvin, mars))\n\u00acFrom(marvin, earth) \u2192 Extraterrestrial(marvin)\nConclusion_FOL: \u00acHuman(marvin) \u2227 \u00acFrom(marvin, mars)"
    },
    {
        "id":"FOLIO_dev_452_1303",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All aliens are extraterrestrials.\nIf someone is from Mars, then they are an alien.\nNo extraterrestrials are human.\nAll highly intelligent beings from Earth are humans.\nMarvin is a highly intelligent being.\nMarvin is either from Earth and from Mars, or he is from neither.\nIf Marvin is not from Earth, then Marvin is an extraterrestrial.\nConclusion: If Marvin is not from Mars, then Marvin is a human.",
        "output":"False",
        "fol":"Premise_FOL: \u2200x (Alien(x) \u2192 Extraterrestrial(x))\n\u2200x (From(x, mars) \u2192 Alien(x))\n\u2200x (Extraterrestrial(x) \u2192 \u00acHuman(x))\n\u2200x (HighlyIntelligentBeing(x) \u2227 From(x, earth) \u2192 Human(x))\nHighlyIntelligentBeing(marvin)\n\u00ac(From(marvin, earth) \u2295 From(marvin, mars))\n\u00acFrom(marvin, earth) \u2192 Extraterrestrial(marvin)\nConclusion_FOL: \u00acFrom(marvin, mars) \u2192 Human(marvin)"
    },
    {
        "id":"FOLIO_dev_340_893",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Everyone at the mixer is a Grand Slam champion or an Oscar-nominated actor.\nEvery Grand Slam champion at the mixer is a professional tennis player.\nAll Oscar-nominated actors at the mixer are celebrities.\nAll professional tennis players at the mixer are athletes.\nIf a person at the mixer is a celebrity, then they are well paid.\nIf a person at the mixer is an athlete, then they are famous.\nAll well-paid people at the mixer live in tax havens.\nDjokovic is at the mixer: if Djokovic is a famous athlete, then Djokovic is well-paid.\nConclusion: Djokovic is a Grand Slam champion.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (At(x, mixer) \u2192 (GrandSlam(x) \u2227 Champion(x)) \u2228 (OscarNominated(x) \u2227 Actor(x)))\n\u2200x (At(x, mixer) \u2227 (GrandSlam(x) \u2227 Champion(x) \u2192 Professional(x) \u2227 TennisPlayer(x))\n\u2200x (At(x, mixer) \u2227 (OscarNominated(x) \u2227 Actor(x) \u2192 Celebrity(x))\n\u2200x (At(x, mixer) \u2227 Professional(x) \u2227 TennisPlayer(x) \u2192 Athlete(x))\n\u2200x (At(x, mixer) \u2227 Celebrity(x) \u2192 WellPaid(x))\n\u2200x (At(x, mixer) \u2227 Athlete(x) \u2192 Famous(x))\n\u2200x (At(x, mixer) \u2227 WellPaid(x) \u2192 LiveIn(x, taxHaven))\nAt(djokovic, mixer) \u2227 (Famous(djokovic) \u2227 Athlete(djokovic) \u2192 WellPaid(djokovic))\nConclusion_FOL: GrandSlam(djokovic) \u2227 Champion(djokovic)"
    },
    {
        "id":"FOLIO_dev_340_894",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Everyone at the mixer is a Grand Slam champion or an Oscar-nominated actor.\nEvery Grand Slam champion at the mixer is a professional tennis player.\nAll Oscar-nominated actors at the mixer are celebrities.\nAll professional tennis players at the mixer are athletes.\nIf a person at the mixer is a celebrity, then they are well paid.\nIf a person at the mixer is an athlete, then they are famous.\nAll well-paid people at the mixer live in tax havens.\nDjokovic is at the mixer: if Djokovic is a famous athlete, then Djokovic is well-paid.\nConclusion: Djokovic lives in a tax haven.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (At(x, mixer) \u2192 (GrandSlam(x) \u2227 Champion(x)) \u2228 (OscarNominated(x) \u2227 Actor(x)))\n\u2200x (At(x, mixer) \u2227 (GrandSlam(x) \u2227 Champion(x) \u2192 Professional(x) \u2227 TennisPlayer(x))\n\u2200x (At(x, mixer) \u2227 (OscarNominated(x) \u2227 Actor(x) \u2192 Celebrity(x))\n\u2200x (At(x, mixer) \u2227 Professional(x) \u2227 TennisPlayer(x) \u2192 Athlete(x))\n\u2200x (At(x, mixer) \u2227 Celebrity(x) \u2192 WellPaid(x))\n\u2200x (At(x, mixer) \u2227 Athlete(x) \u2192 Famous(x))\n\u2200x (At(x, mixer) \u2227 WellPaid(x) \u2192 LiveIn(x, taxHaven))\nAt(djokovic, mixer) \u2227 (Famous(djokovic) \u2227 Athlete(djokovic) \u2192 WellPaid(djokovic))\nConclusion_FOL: LiveIn(djokovic, taxHaven)"
    },
    {
        "id":"FOLIO_dev_340_895",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Everyone at the mixer is a Grand Slam champion or an Oscar-nominated actor.\nEvery Grand Slam champion at the mixer is a professional tennis player.\nAll Oscar-nominated actors at the mixer are celebrities.\nAll professional tennis players at the mixer are athletes.\nIf a person at the mixer is a celebrity, then they are well paid.\nIf a person at the mixer is an athlete, then they are famous.\nAll well-paid people at the mixer live in tax havens.\nDjokovic is at the mixer: if Djokovic is a famous athlete, then Djokovic is well-paid.\nConclusion: Djokovic does not live in a tax haven.",
        "output":"False",
        "fol":"Premise_FOL: \u2200x (At(x, mixer) \u2192 (GrandSlam(x) \u2227 Champion(x)) \u2228 (OscarNominated(x) \u2227 Actor(x)))\n\u2200x (At(x, mixer) \u2227 (GrandSlam(x) \u2227 Champion(x) \u2192 Professional(x) \u2227 TennisPlayer(x))\n\u2200x (At(x, mixer) \u2227 (OscarNominated(x) \u2227 Actor(x) \u2192 Celebrity(x))\n\u2200x (At(x, mixer) \u2227 Professional(x) \u2227 TennisPlayer(x) \u2192 Athlete(x))\n\u2200x (At(x, mixer) \u2227 Celebrity(x) \u2192 WellPaid(x))\n\u2200x (At(x, mixer) \u2227 Athlete(x) \u2192 Famous(x))\n\u2200x (At(x, mixer) \u2227 WellPaid(x) \u2192 LiveIn(x, taxHaven))\nAt(djokovic, mixer) \u2227 (Famous(djokovic) \u2227 Athlete(djokovic) \u2192 WellPaid(djokovic))\nConclusion_FOL: \u00acLiveIn(djokovic, taxHaven)"
    },
    {
        "id":"FOLIO_dev_96_289",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Diamond Mine is a professional wrestling stable formed in WWE.\nRoderick Strong leads Diamond Mine.\nDiamond Mine includes the Creed Brothers and Ivy Nile.\nImperium has a feud with Diamond Mine.\nConclusion: Roderick Strong leads a professional wrestling stable.",
        "output":"True",
        "fol":"Premise_FOL: ProfessionalWrestlingStable(diamondMine) \u2227 In(diamondMine, wWE)\nLeads(roderickStrong, diamondMine)\nIncludes(diamondMine, creedBrothers) \u2227 Includes(diamondMine, ivyNile)\nFeuds(imperium, diamondMine)\nConclusion_FOL: \u2203x (Leads(roderickstrong, x) \u2227 ProfessionalWrestlingStable(x))"
    },
    {
        "id":"FOLIO_dev_96_290",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Diamond Mine is a professional wrestling stable formed in WWE.\nRoderick Strong leads Diamond Mine.\nDiamond Mine includes the Creed Brothers and Ivy Nile.\nImperium has a feud with Diamond Mine.\nConclusion: Roderick Strong leads the Creed Brothers.",
        "output":"Uncertain",
        "fol":"Premise_FOL: ProfessionalWrestlingStable(diamondMine) \u2227 In(diamondMine, wWE)\nLeads(roderickStrong, diamondMine)\nIncludes(diamondMine, creedBrothers) \u2227 Includes(diamondMine, ivyNile)\nFeuds(imperium, diamondMine)\nConclusion_FOL: Leads(roderickstrong, creedbrothers)"
    },
    {
        "id":"FOLIO_dev_96_291",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Diamond Mine is a professional wrestling stable formed in WWE.\nRoderick Strong leads Diamond Mine.\nDiamond Mine includes the Creed Brothers and Ivy Nile.\nImperium has a feud with Diamond Mine.\nConclusion: Imperium doesn't have a feud with a professional wrestling stable that includes Ivy Nile.",
        "output":"False",
        "fol":"Premise_FOL: ProfessionalWrestlingStable(diamondMine) \u2227 In(diamondMine, wWE)\nLeads(roderickStrong, diamondMine)\nIncludes(diamondMine, creedBrothers) \u2227 Includes(diamondMine, ivyNile)\nFeuds(imperium, diamondMine)\nConclusion_FOL: \u2200x ((ProfessionalWrestlingStable(x) \u2227 Includes(x, ivynile)) \u2192 \u00acFeuds(imperium, x))"
    },
    {
        "id":"FOLIO_dev_219_621",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Symphony No. 9 is a music piece.\nComposers write music pieces.\nBeethoven wrote Symphony No. 9.\nVienna Music Society premiered Symphony No. 9.\nVienna Music Society is an orchestra.\nBeethoven leads the Vienna Music Society.\nOrchestras are led by conductors.\nConclusion: Beethoven is a composer.",
        "output":"True",
        "fol":"Premise_FOL: MusicPiece(symphony9)\n\u2200x (MusicPiece(x) \u2192 \u2203y (Composer(y) \u2227 Write(y, x)))\nWrittenby(symphony9, beethoven)\nPremiered(viennaMusicSociety, symphony9)\nOrchestra(viennaMusicSociety)\nLead(beethoven, viennaMusicSociety)\n\u2200x (Orchestra(x) \u2192 (\u2203y Conductor(y) \u2227 Lead(y, x)))\nConclusion_FOL: Composer(beethoven)"
    },
    {
        "id":"FOLIO_dev_219_622",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Symphony No. 9 is a music piece.\nComposers write music pieces.\nBeethoven wrote Symphony No. 9.\nVienna Music Society premiered Symphony No. 9.\nVienna Music Society is an orchestra.\nBeethoven leads the Vienna Music Society.\nOrchestras are led by conductors.\nConclusion: Some orchestras premiered music pieces.",
        "output":"True",
        "fol":"Premise_FOL: MusicPiece(symphony9)\n\u2200x (MusicPiece(x) \u2192 \u2203y (Composer(y) \u2227 Write(y, x)))\nWrittenby(symphony9, beethoven)\nPremiered(viennaMusicSociety, symphony9)\nOrchestra(viennaMusicSociety)\nLead(beethoven, viennaMusicSociety)\n\u2200x (Orchestra(x) \u2192 (\u2203y Conductor(y) \u2227 Lead(y, x)))\nConclusion_FOL: \u2203x \u2203y (Orchestra(x) \u2227 MusicPiece(y) \u2227 Premiered(x, y))"
    },
    {
        "id":"FOLIO_dev_219_623",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Symphony No. 9 is a music piece.\nComposers write music pieces.\nBeethoven wrote Symphony No. 9.\nVienna Music Society premiered Symphony No. 9.\nVienna Music Society is an orchestra.\nBeethoven leads the Vienna Music Society.\nOrchestras are led by conductors.\nConclusion: Beethoven is not a conductor.",
        "output":"False",
        "fol":"Premise_FOL: MusicPiece(symphony9)\n\u2200x (MusicPiece(x) \u2192 \u2203y (Composer(y) \u2227 Write(y, x)))\nWrittenby(symphony9, beethoven)\nPremiered(viennaMusicSociety, symphony9)\nOrchestra(viennaMusicSociety)\nLead(beethoven, viennaMusicSociety)\n\u2200x (Orchestra(x) \u2192 (\u2203y Conductor(y) \u2227 Lead(y, x)))\nConclusion_FOL: \u00acConductor(beethoven)"
    },
    {
        "id":"FOLIO_dev_350_927",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All of Zaha Hadid's design styles that Max adores have interesting geometries.\nNo brutalist buildings that Max adores have interesting geometries.\nEvery style that Max adores is either Zaha Hadid's design style or Kelly Wearstler's design style. \nAll of Kelly Wearstler's design styles that Max adores are evocative.\nAll of Kelly Wearstler's design styles that Max adores are dreamy.\nIf a design by Max that he adores has interesting geometries, then the design is a brutalist building and evocative.\nConclusion: A design by Max is a brutalist building.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (Adore(max, x) \u2227 ZahaHadid(x) \u2227 DesignStyle(x) \u2192 InterestingGeometry(x))\n\u2200x (Adore(max, x) \u2227 BrutalistBuilding(x) \u2192 \u00acInterestingGeometry(x))\n\u2200x (Adore(max, x) \u2192 ((ZahaHadid(x) \u2227 DesignStyle(x)) \u2295 (KellyWearstler(x) \u2227 DesignStyle(x)))\n\u2200x (Adore(max, x) \u2227 KellyWearstler(x) \u2227 DesignStyle(x) \u2192 Evocative(x))\n\u2200x (Adore(max, x) \u2227 KellyWearstler(x) \u2227 DesignStyle(x) \u2192 Dreamy(x))\n\u2203x (Adore(max, x) \u2227 Design(x) \u2227 ByMax(x) \u2227 InterestingGeometry(x) \u2192 BrutalistBuilding(x) \u2227 Evocative(x))\nConclusion_FOL: \u2203x (Design(x) \u2227 ByMax(x) \u2227 BrutalistBuilding(x))"
    },
    {
        "id":"FOLIO_dev_350_928",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All of Zaha Hadid's design styles that Max adores have interesting geometries.\nNo brutalist buildings that Max adores have interesting geometries.\nEvery style that Max adores is either Zaha Hadid's design style or Kelly Wearstler's design style. \nAll of Kelly Wearstler's design styles that Max adores are evocative.\nAll of Kelly Wearstler's design styles that Max adores are dreamy.\nIf a design by Max that he adores has interesting geometries, then the design is a brutalist building and evocative.\nConclusion: A design by Max is evocative and dreamy.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (Adore(max, x) \u2227 ZahaHadid(x) \u2227 DesignStyle(x) \u2192 InterestingGeometry(x))\n\u2200x (Adore(max, x) \u2227 BrutalistBuilding(x) \u2192 \u00acInterestingGeometry(x))\n\u2200x (Adore(max, x) \u2192 ((ZahaHadid(x) \u2227 DesignStyle(x)) \u2295 (KellyWearstler(x) \u2227 DesignStyle(x)))\n\u2200x (Adore(max, x) \u2227 KellyWearstler(x) \u2227 DesignStyle(x) \u2192 Evocative(x))\n\u2200x (Adore(max, x) \u2227 KellyWearstler(x) \u2227 DesignStyle(x) \u2192 Dreamy(x))\n\u2203x (Adore(max, x) \u2227 Design(x) \u2227 ByMax(x) \u2227 InterestingGeometry(x) \u2192 BrutalistBuilding(x) \u2227 Evocative(x))\nConclusion_FOL: \u2203x (Design(x) \u2227 ByMax(x) \u2227 Evocative(x) \u2227 Dreamy(x))"
    },
    {
        "id":"FOLIO_dev_350_929",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All of Zaha Hadid's design styles that Max adores have interesting geometries.\nNo brutalist buildings that Max adores have interesting geometries.\nEvery style that Max adores is either Zaha Hadid's design style or Kelly Wearstler's design style. \nAll of Kelly Wearstler's design styles that Max adores are evocative.\nAll of Kelly Wearstler's design styles that Max adores are dreamy.\nIf a design by Max that he adores has interesting geometries, then the design is a brutalist building and evocative.\nConclusion: A design by Max is either evocative or dreamy.",
        "output":"False",
        "fol":"Premise_FOL: \u2200x (Adore(max, x) \u2227 ZahaHadid(x) \u2227 DesignStyle(x) \u2192 InterestingGeometry(x))\n\u2200x (Adore(max, x) \u2227 BrutalistBuilding(x) \u2192 \u00acInterestingGeometry(x))\n\u2200x (Adore(max, x) \u2192 ((ZahaHadid(x) \u2227 DesignStyle(x)) \u2295 (KellyWearstler(x) \u2227 DesignStyle(x)))\n\u2200x (Adore(max, x) \u2227 KellyWearstler(x) \u2227 DesignStyle(x) \u2192 Evocative(x))\n\u2200x (Adore(max, x) \u2227 KellyWearstler(x) \u2227 DesignStyle(x) \u2192 Dreamy(x))\n\u2203x (Adore(max, x) \u2227 Design(x) \u2227 ByMax(x) \u2227 InterestingGeometry(x) \u2192 BrutalistBuilding(x) \u2227 Evocative(x))\nConclusion_FOL: \u2203x (Design(x) \u2227 ByMax(x) \u2227 (Evocative(x) \u2295 Dreamy(x)))"
    },
    {
        "id":"FOLIO_dev_385_1029",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: If someone is ranked highly by the Women's Tennis Association, then they are one of the most active players in major tennis. \nEveryone who lost to Iga \u015awi\u0105tek at Roland Garros 2022 is ranked highly by the Women's Tennis Association.\nAll female tennis players at Roland Garros 2022 lost to Iga \u015awi\u0105tek.\nAll tennis players at Roland Garros 2022 are either female or male.\nAll male tennis players at Roland Garros in 2022 lost to Rafael Nadal.\nIf Coco Gauff is ranked highly by the Women's Tennis Association or lost to Rafael Nadal, then Coco Gauff is not a male tennis player at Roland Garros 2022.\nCoco Gauff is at Roland Garros 2022.\nConclusion: Coco Gauff is among the most active Grand-Slam players.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (RankedHighlyBy(x, womensTennisAssociation) \u2192 MostActivePlayerIn(x, majorTennis))\n\u2200x (LostTo(x, \u015bwi\u0105tek) \u2227  At(x, rolandGarros2022) \u2192 RankedHighlyBy(x, womensTennisAssociation))\n\u2200x (FemaleTennisPlayer(x) \u2227 At(x, rolandGarros2022) \u2192 LostTo(x, \u015bwi\u0105tek) \u2227  At(x, rolandGarros2022))\n\u2200x (TennisPlayer(x) \u2227 At(x, rolandGarros2022) \u2192 (Female(x) \u2227 TennisPlayer(x)) \u2295 (Male(x) \u2227 TennisPlayer(x))) \n\u2200x (Male(x) \u2227 TennisPlayer(x) \u2227 At(x, rolandGarros2022) \u2192 LostTo(x, \u015bwi\u0105tek) \u2227 At(x, rolandGarros2022))\nRankedHighlyBy(cocoGauff, womensTennisAssociation) \u2228 (LostTo(cocoGauff, \u015bwi\u0105tek) \u2227 LostAt(cocoGauff, rolandGarros2022)) \u2192 \u00ac(Male(cocoGauff) \u2227 TennisPlayer(cocoGauff) \u2227 AtRolandGarros2022(cocoGauff))\nTennisPlayer(cocoGauff) \u2227 At(cocoGauff, rolandGarros2022)\nConclusion_FOL: MostActivePlayerIn(cocoGauff, majorTennis)"
    },
    {
        "id":"FOLIO_dev_385_1030",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: If someone is ranked highly by the Women's Tennis Association, then they are one of the most active players in major tennis. \nEveryone who lost to Iga \u015awi\u0105tek at Roland Garros 2022 is ranked highly by the Women's Tennis Association.\nAll female tennis players at Roland Garros 2022 lost to Iga \u015awi\u0105tek.\nAll tennis players at Roland Garros 2022 are either female or male.\nAll male tennis players at Roland Garros in 2022 lost to Rafael Nadal.\nIf Coco Gauff is ranked highly by the Women's Tennis Association or lost to Rafael Nadal, then Coco Gauff is not a male tennis player at Roland Garros 2022.\nCoco Gauff is at Roland Garros 2022.\nConclusion: Coco Gauff has lost to Rafael Nadal.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (RankedHighlyBy(x, womensTennisAssociation) \u2192 MostActivePlayerIn(x, majorTennis))\n\u2200x (LostTo(x, \u015bwi\u0105tek) \u2227  At(x, rolandGarros2022) \u2192 RankedHighlyBy(x, womensTennisAssociation))\n\u2200x (FemaleTennisPlayer(x) \u2227 At(x, rolandGarros2022) \u2192 LostTo(x, \u015bwi\u0105tek) \u2227  At(x, rolandGarros2022))\n\u2200x (TennisPlayer(x) \u2227 At(x, rolandGarros2022) \u2192 (Female(x) \u2227 TennisPlayer(x)) \u2295 (Male(x) \u2227 TennisPlayer(x))) \n\u2200x (Male(x) \u2227 TennisPlayer(x) \u2227 At(x, rolandGarros2022) \u2192 LostTo(x, \u015bwi\u0105tek) \u2227 At(x, rolandGarros2022))\nRankedHighlyBy(cocoGauff, womensTennisAssociation) \u2228 (LostTo(cocoGauff, \u015bwi\u0105tek) \u2227 LostAt(cocoGauff, rolandGarros2022)) \u2192 \u00ac(Male(cocoGauff) \u2227 TennisPlayer(cocoGauff) \u2227 AtRolandGarros2022(cocoGauff))\nTennisPlayer(cocoGauff) \u2227 At(cocoGauff, rolandGarros2022)\nConclusion_FOL: LostTo(cocoGauff, \u015bwi\u0105tek) \u2227 At(cocoGauff, rolandGarros2022)"
    },
    {
        "id":"FOLIO_dev_385_1031",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: If someone is ranked highly by the Women's Tennis Association, then they are one of the most active players in major tennis. \nEveryone who lost to Iga \u015awi\u0105tek at Roland Garros 2022 is ranked highly by the Women's Tennis Association.\nAll female tennis players at Roland Garros 2022 lost to Iga \u015awi\u0105tek.\nAll tennis players at Roland Garros 2022 are either female or male.\nAll male tennis players at Roland Garros in 2022 lost to Rafael Nadal.\nIf Coco Gauff is ranked highly by the Women's Tennis Association or lost to Rafael Nadal, then Coco Gauff is not a male tennis player at Roland Garros 2022.\nCoco Gauff is at Roland Garros 2022.\nConclusion: Coco Gauff is not both a player who lost to Iga \u015awi\u0105tek at Roland Garros 2022 and one of the most active players in major tennis.",
        "output":"False",
        "fol":"Premise_FOL: \u2200x (RankedHighlyBy(x, womensTennisAssociation) \u2192 MostActivePlayerIn(x, majorTennis))\n\u2200x (LostTo(x, \u015bwi\u0105tek) \u2227  At(x, rolandGarros2022) \u2192 RankedHighlyBy(x, womensTennisAssociation))\n\u2200x (FemaleTennisPlayer(x) \u2227 At(x, rolandGarros2022) \u2192 LostTo(x, \u015bwi\u0105tek) \u2227  At(x, rolandGarros2022))\n\u2200x (TennisPlayer(x) \u2227 At(x, rolandGarros2022) \u2192 (Female(x) \u2227 TennisPlayer(x)) \u2295 (Male(x) \u2227 TennisPlayer(x))) \n\u2200x (Male(x) \u2227 TennisPlayer(x) \u2227 At(x, rolandGarros2022) \u2192 LostTo(x, \u015bwi\u0105tek) \u2227 At(x, rolandGarros2022))\nRankedHighlyBy(cocoGauff, womensTennisAssociation) \u2228 (LostTo(cocoGauff, \u015bwi\u0105tek) \u2227 LostAt(cocoGauff, rolandGarros2022)) \u2192 \u00ac(Male(cocoGauff) \u2227 TennisPlayer(cocoGauff) \u2227 AtRolandGarros2022(cocoGauff))\nTennisPlayer(cocoGauff) \u2227 At(cocoGauff, rolandGarros2022)\nConclusion_FOL: \u00ac(LostTo(cocoGauff, \u015bwi\u0105tek) \u2227 At(cocoGauff, rolandGarros2022)) \u2228 \u00acMostActivePlayerIn(cocoGauff, majorTennis)"
    },
    {
        "id":"FOLIO_dev_256_700",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All cats are mammals.\nSome pets are not mammals.\nConclusion: No pets are cats.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (Cat(x) \u2192 Mammal(x))\n\u2203x (Pet(x) \u2227 \u00acMammal(x))\nConclusion_FOL: \u2200x (Pet(x) \u2192 \u00acCat(x))"
    },
    {
        "id":"FOLIO_dev_159_456",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: There are four seasons in a year: Spring, Summer, Fall, and Winter.\nAll students who want to have a long vacation have summer as their favorite season.\nEmma's favorite season is summer.\nMia's favorite season is not the same as Emma's. \nJames wants to have a long vacation.\nConclusion: James's favorite season is summer.",
        "output":"True",
        "fol":"Premise_FOL: Season(spring) \u2228 Season(summer) \u2228 Season(fall) \u2228 Season(winter) \u2227 (Season(spring) \u2192 \u00acSeason(summer) \u2227 \u00acSeason(fall) \u2227 \u00acSeason(winter)) \u2227 (Season(summer) \u2192 \u00acSeason(spring) \u2227 \u00acSeason(fall) \u2227 \u00acSeason(winter)) \u2227 (Season(fall) \u2192 \u00acSeason(spring) \u2227 \u00acSeason(summer) \u2227 \u00acSeason(winter)) \u2227 (Season(winter) \u2192 \u00acSeason(spring) \u2227 \u00acSeason(summer) \u2227 \u00acSeason(fall))\n\u2200x (Want(x, longvacation) \u2192 Favorite(x, summer))\nFavorite(emma, summer)\n\u2200x \u2200y (Season(x) \u2227 Season(y) \u2227 Favorite(mia, x) \u2227 Favorite(emma, y) \u2192 \u00ac(x=y))\nWant(james, longVacation)\nConclusion_FOL: Favorite(james, summer)"
    },
    {
        "id":"FOLIO_dev_159_457",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: There are four seasons in a year: Spring, Summer, Fall, and Winter.\nAll students who want to have a long vacation have summer as their favorite season.\nEmma's favorite season is summer.\nMia's favorite season is not the same as Emma's. \nJames wants to have a long vacation.\nConclusion: Mia's favorite season is spring.",
        "output":"Uncertain",
        "fol":"Premise_FOL: Season(spring) \u2228 Season(summer) \u2228 Season(fall) \u2228 Season(winter) \u2227 (Season(spring) \u2192 \u00acSeason(summer) \u2227 \u00acSeason(fall) \u2227 \u00acSeason(winter)) \u2227 (Season(summer) \u2192 \u00acSeason(spring) \u2227 \u00acSeason(fall) \u2227 \u00acSeason(winter)) \u2227 (Season(fall) \u2192 \u00acSeason(spring) \u2227 \u00acSeason(summer) \u2227 \u00acSeason(winter)) \u2227 (Season(winter) \u2192 \u00acSeason(spring) \u2227 \u00acSeason(summer) \u2227 \u00acSeason(fall))\n\u2200x (Want(x, longvacation) \u2192 Favorite(x, summer))\nFavorite(emma, summer)\n\u2200x \u2200y (Season(x) \u2227 Season(y) \u2227 Favorite(mia, x) \u2227 Favorite(emma, y) \u2192 \u00ac(x=y))\nWant(james, longVacation)\nConclusion_FOL: Favorite(mia, spring)"
    },
    {
        "id":"FOLIO_dev_343_904",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: No digital media are analog.\nEvery printed text is analog media.\nAll streaming services are digital media.\nIf an object is a hardcover book, then it is printed text.\nIf 1984 is a streaming service, then 1984 is a hardcover book.\nConclusion: 1984 is printed text.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (DigitalMedia(x) \u2192 \u00acAnalogMedia(x))\n\u2200x (PrintedText(x) \u2192 AnalogMedia(x))\n\u2200x (StreamingService(x) \u2192 DigitalMedia(x))\n\u2200x (HardcoverBook(x) \u2192 PrintedText(x))\nStreamingService(1984) \u2192 HardcoverBook(1984)\nConclusion_FOL: PrintedText(y1984)"
    },
    {
        "id":"FOLIO_dev_343_905",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: No digital media are analog.\nEvery printed text is analog media.\nAll streaming services are digital media.\nIf an object is a hardcover book, then it is printed text.\nIf 1984 is a streaming service, then 1984 is a hardcover book.\nConclusion: 1984 is a streaming service.",
        "output":"False",
        "fol":"Premise_FOL: \u2200x (DigitalMedia(x) \u2192 \u00acAnalogMedia(x))\n\u2200x (PrintedText(x) \u2192 AnalogMedia(x))\n\u2200x (StreamingService(x) \u2192 DigitalMedia(x))\n\u2200x (HardcoverBook(x) \u2192 PrintedText(x))\nStreamingService(1984) \u2192 HardcoverBook(1984)\nConclusion_FOL: StreamingService(y1984)"
    },
    {
        "id":"FOLIO_dev_343_906",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: No digital media are analog.\nEvery printed text is analog media.\nAll streaming services are digital media.\nIf an object is a hardcover book, then it is printed text.\nIf 1984 is a streaming service, then 1984 is a hardcover book.\nConclusion: 1984 is not a streaming service.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (DigitalMedia(x) \u2192 \u00acAnalogMedia(x))\n\u2200x (PrintedText(x) \u2192 AnalogMedia(x))\n\u2200x (StreamingService(x) \u2192 DigitalMedia(x))\n\u2200x (HardcoverBook(x) \u2192 PrintedText(x))\nStreamingService(1984) \u2192 HardcoverBook(1984)\nConclusion_FOL: \u00acStreamingService(y1984)"
    },
    {
        "id":"FOLIO_dev_213_608",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All Romance languages are Indo-European languages.\nRomance languages are a language family.\nAll languages within a language family are related to each other.\nFrench and Spanish are both Romance languages.\nGerman is related to Spanish.\nBasque is not related to any other language.\nConclusion: Basque is a Romance language.",
        "output":"False",
        "fol":"Premise_FOL: \u2200x (RomanceLanguage(x) \u2192 IndoEuropeanLanguage(x))\n\u2200x (RomanceLanguage(x) \u2192 MemberOf(x, languageFamily))\n\u2200x \u2200y \u2200z ((MemberOf(x, z) \u2227 MemberOf(y, z)) \u2192 (Related(x, y) \u2227 Related(y, x)))\nRomanceLanguage(french) \u2227 RomanceLanguage(spanish)\nRelated(german, spanish)\n\u2200x (Language(x) \u2192 \u00acRelated(basque, x))\nConclusion_FOL: RomanceLanguage(basque)"
    },
    {
        "id":"FOLIO_dev_213_609",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All Romance languages are Indo-European languages.\nRomance languages are a language family.\nAll languages within a language family are related to each other.\nFrench and Spanish are both Romance languages.\nGerman is related to Spanish.\nBasque is not related to any other language.\nConclusion: German is a Romance language.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (RomanceLanguage(x) \u2192 IndoEuropeanLanguage(x))\n\u2200x (RomanceLanguage(x) \u2192 MemberOf(x, languageFamily))\n\u2200x \u2200y \u2200z ((MemberOf(x, z) \u2227 MemberOf(y, z)) \u2192 (Related(x, y) \u2227 Related(y, x)))\nRomanceLanguage(french) \u2227 RomanceLanguage(spanish)\nRelated(german, spanish)\n\u2200x (Language(x) \u2192 \u00acRelated(basque, x))\nConclusion_FOL: RomanceLanguage(german)"
    },
    {
        "id":"FOLIO_dev_213_610",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All Romance languages are Indo-European languages.\nRomance languages are a language family.\nAll languages within a language family are related to each other.\nFrench and Spanish are both Romance languages.\nGerman is related to Spanish.\nBasque is not related to any other language.\nConclusion: French is an Indo-European language.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (RomanceLanguage(x) \u2192 IndoEuropeanLanguage(x))\n\u2200x (RomanceLanguage(x) \u2192 MemberOf(x, languageFamily))\n\u2200x \u2200y \u2200z ((MemberOf(x, z) \u2227 MemberOf(y, z)) \u2192 (Related(x, y) \u2227 Related(y, x)))\nRomanceLanguage(french) \u2227 RomanceLanguage(spanish)\nRelated(german, spanish)\n\u2200x (Language(x) \u2192 \u00acRelated(basque, x))\nConclusion_FOL: IndoEuropeanLanguage(french)"
    },
    {
        "id":"FOLIO_dev_79_240",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Robert Lewandowski is a striker.\nStrikers are soccer players.\nRobert Lewandowski left Bayern Munchen.\nIf a player leaves a team they no longer play for that team.\nConclusion: Robert Lewandowski is a soccer player.",
        "output":"True",
        "fol":"Premise_FOL: Striker(robertLewandowski)\n\u2200x (Striker(x) \u2192 SoccerPlayer(x))\nLeft(robertLewandowski, bayernMunchen)\n\u2200x \u2200y (Left(x, y) \u2192 \u00acPlaysFor(x, y))\nConclusion_FOL: SoccerPlayer(robertLewandowski)"
    },
    {
        "id":"FOLIO_dev_79_241",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Robert Lewandowski is a striker.\nStrikers are soccer players.\nRobert Lewandowski left Bayern Munchen.\nIf a player leaves a team they no longer play for that team.\nConclusion: Robert Lewandowski plays for Bayern Munchen.",
        "output":"False",
        "fol":"Premise_FOL: Striker(robertLewandowski)\n\u2200x (Striker(x) \u2192 SoccerPlayer(x))\nLeft(robertLewandowski, bayernMunchen)\n\u2200x \u2200y (Left(x, y) \u2192 \u00acPlaysFor(x, y))\nConclusion_FOL: PlaysFor(robertLewandowski, bayernMunchen)"
    },
    {
        "id":"FOLIO_dev_79_242",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Robert Lewandowski is a striker.\nStrikers are soccer players.\nRobert Lewandowski left Bayern Munchen.\nIf a player leaves a team they no longer play for that team.\nConclusion: Robert Lewandowski is a star.",
        "output":"Uncertain",
        "fol":"Premise_FOL: Striker(robertLewandowski)\n\u2200x (Striker(x) \u2192 SoccerPlayer(x))\nLeft(robertLewandowski, bayernMunchen)\n\u2200x \u2200y (Left(x, y) \u2192 \u00acPlaysFor(x, y))\nConclusion_FOL: SoccerStar(robertLewandowski)"
    },
    {
        "id":"FOLIO_dev_2_4",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Billings is a city in the state of Montana in U.S.\nThe state of Montana includes the cities of Butte, Helena, and Missoula.\nWhite Sulphur Springs and Butte are cities in the same state in U.S.\nThe city of St Pierre is not in the state of Montana.\nAny city in Butte is not in St Pierre.\nA city can only be in one state in U.S.  except for Bristol, Texarkana, Texhoma and Union City.\nConclusion: Butte and St Pierre are in the same state.",
        "output":"False",
        "fol":"Premise_FOL: City(billings) \u2227 In(billings, montana)\nCity(butte) \u2227 In(butte, montana) \u2227 City(helena) \u2227 In(helena, montana) \u2227 City(missoula) \u2227 In(missoula, montana)\n\u2203x (City(whitesulphursprings) \u2227 In(whitesulphursprings, x) \u2227 City(butte) \u2227 In(butte, x))\nCity(pierre) \u2227 \u00ac(In(pierre, montana))\n\u2200x ((City(x) \u2227 City(butte) \u2227 In(x, butte)) \u2192 \u00ac(In(x, pierre)))\n\u2200x \u2203y ((City(x) \u2227 (In(x, y) \u2227 \u00ac(x=bristol) \u2227 \u00ac(x=texarkana) \u2227 \u00ac(x=texhoma) \u2227 \u00ac(x=unionCity)) \u2192 \u00ac\u2203z (\u00ac(z=y) \u2227 In(x, z)))\nConclusion_FOL: \u2203x (In(butte, x) \u2227 In(stPierre, x))"
    },
    {
        "id":"FOLIO_dev_2_5",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Billings is a city in the state of Montana in U.S.\nThe state of Montana includes the cities of Butte, Helena, and Missoula.\nWhite Sulphur Springs and Butte are cities in the same state in U.S.\nThe city of St Pierre is not in the state of Montana.\nAny city in Butte is not in St Pierre.\nA city can only be in one state in U.S.  except for Bristol, Texarkana, Texhoma and Union City.\nConclusion: St Pierre and Bismarck are in the same state.",
        "output":"Uncertain",
        "fol":"Premise_FOL: City(billings) \u2227 In(billings, montana)\nCity(butte) \u2227 In(butte, montana) \u2227 City(helena) \u2227 In(helena, montana) \u2227 City(missoula) \u2227 In(missoula, montana)\n\u2203x (City(whitesulphursprings) \u2227 In(whitesulphursprings, x) \u2227 City(butte) \u2227 In(butte, x))\nCity(pierre) \u2227 \u00ac(In(pierre, montana))\n\u2200x ((City(x) \u2227 City(butte) \u2227 In(x, butte)) \u2192 \u00ac(In(x, pierre)))\n\u2200x \u2203y ((City(x) \u2227 (In(x, y) \u2227 \u00ac(x=bristol) \u2227 \u00ac(x=texarkana) \u2227 \u00ac(x=texhoma) \u2227 \u00ac(x=unionCity)) \u2192 \u00ac\u2203z (\u00ac(z=y) \u2227 In(x, z)))\nConclusion_FOL: \u2203x (City(pierre) \u2227 In(pierre, x) \u2227 City(bismarck) \u2227 In(bismarck, x))"
    },
    {
        "id":"FOLIO_dev_2_6",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Billings is a city in the state of Montana in U.S.\nThe state of Montana includes the cities of Butte, Helena, and Missoula.\nWhite Sulphur Springs and Butte are cities in the same state in U.S.\nThe city of St Pierre is not in the state of Montana.\nAny city in Butte is not in St Pierre.\nA city can only be in one state in U.S.  except for Bristol, Texarkana, Texhoma and Union City.\nConclusion: Montana is home to the city of Missoula.",
        "output":"True",
        "fol":"Premise_FOL: City(billings) \u2227 In(billings, montana)\nCity(butte) \u2227 In(butte, montana) \u2227 City(helena) \u2227 In(helena, montana) \u2227 City(missoula) \u2227 In(missoula, montana)\n\u2203x (City(whitesulphursprings) \u2227 In(whitesulphursprings, x) \u2227 City(butte) \u2227 In(butte, x))\nCity(pierre) \u2227 \u00ac(In(pierre, montana))\n\u2200x ((City(x) \u2227 City(butte) \u2227 In(x, butte)) \u2192 \u00ac(In(x, pierre)))\n\u2200x \u2203y ((City(x) \u2227 (In(x, y) \u2227 \u00ac(x=bristol) \u2227 \u00ac(x=texarkana) \u2227 \u00ac(x=texhoma) \u2227 \u00ac(x=unionCity)) \u2192 \u00ac\u2203z (\u00ac(z=y) \u2227 In(x, z)))\nConclusion_FOL: City(missoula) \u2227 In(missoula, montana)"
    },
    {
        "id":"FOLIO_dev_192_548",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: International students in the US have either an F1 visa or a J1 visa.\nAn international student in the US with an F1 visa needs to apply for CPT or OPT if the student wants to work in the US.\nMike is an international student.\nMike needs to apply for CPT if he wants to work in the US.\nConclusion: Mike has an F1 visa.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (InternationalStudent(x) \u2227 In(x, unitedStates) \u2192 F1Visa(x) \u2295 J1Visa(x))\n\u2200x (InternationalStudent(x) \u2227 In(x, unitedStates) \u2227 F1Visa(x) \u2227 WantToWorkIn(x, unitedStates) \u2192 Apply(x, cpt) \u2228 Apply(x, opt))\nInternationalStudent(mike)\nWantToWorkIn(x, unitedStates) \u2192 Apply(mike, cpt)\nConclusion_FOL: F1Visa(mike)"
    },
    {
        "id":"FOLIO_dev_192_549",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: International students in the US have either an F1 visa or a J1 visa.\nAn international student in the US with an F1 visa needs to apply for CPT or OPT if the student wants to work in the US.\nMike is an international student.\nMike needs to apply for CPT if he wants to work in the US.\nConclusion: Mike has a J1 visa.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (InternationalStudent(x) \u2227 In(x, unitedStates) \u2192 F1Visa(x) \u2295 J1Visa(x))\n\u2200x (InternationalStudent(x) \u2227 In(x, unitedStates) \u2227 F1Visa(x) \u2227 WantToWorkIn(x, unitedStates) \u2192 Apply(x, cpt) \u2228 Apply(x, opt))\nInternationalStudent(mike)\nWantToWorkIn(x, unitedStates) \u2192 Apply(mike, cpt)\nConclusion_FOL: J1Visa(mike)"
    },
    {
        "id":"FOLIO_dev_442_1271",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All Brown Swiss cattle are cows.\nSome pets are Brown Swiss Cattle.\nAll cows are domesticated animals.\nAlligators are not domesticated animals.\nTed is an alligator.\nConclusion: Ted is a pet.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (BrownSwissCattle(x) \u2192 Cow(x))\n\u2203x (Pet(x) \u2227 BrownSwissCattle(x))\n\u2200x (Cow(x) \u2192 DomesticatedAnimal(x))\n\u2200x (Aligator(x) \u2192 \u00acDomesticatedAnimal(x))\nAligator(ted)\nConclusion_FOL: Pet(ted)"
    },
    {
        "id":"FOLIO_dev_442_1272",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All Brown Swiss cattle are cows.\nSome pets are Brown Swiss Cattle.\nAll cows are domesticated animals.\nAlligators are not domesticated animals.\nTed is an alligator.\nConclusion: Ted is a pet and Brown Swiss cattle",
        "output":"False",
        "fol":"Premise_FOL: \u2200x (BrownSwissCattle(x) \u2192 Cow(x))\n\u2203x (Pet(x) \u2227 BrownSwissCattle(x))\n\u2200x (Cow(x) \u2192 DomesticatedAnimal(x))\n\u2200x (Aligator(x) \u2192 \u00acDomesticatedAnimal(x))\nAligator(ted)\nConclusion_FOL: Pet(ted) \u2227 BrownSwissCattle(ted)"
    },
    {
        "id":"FOLIO_dev_442_1273",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All Brown Swiss cattle are cows.\nSome pets are Brown Swiss Cattle.\nAll cows are domesticated animals.\nAlligators are not domesticated animals.\nTed is an alligator.\nConclusion: If Ted is a Brown Swiss cattle, then Ted is not a pet.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (BrownSwissCattle(x) \u2192 Cow(x))\n\u2203x (Pet(x) \u2227 BrownSwissCattle(x))\n\u2200x (Cow(x) \u2192 DomesticatedAnimal(x))\n\u2200x (Aligator(x) \u2192 \u00acDomesticatedAnimal(x))\nAligator(ted)\nConclusion_FOL: BrownSwissCattle(ted) \u2192 \u00acPet(ted)"
    },
    {
        "id":"FOLIO_dev_234_663",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Yale University is a private Ivy League research university.\nYale University moved to New Haven in 1716.\nYale university's endowment was valued at $42.3 billion.\nA list of residential colleges at Yale: Benjamin Franklin College, Berkeley College, Branford College, Davenport College, Ezra Stiles College, Grace Hopper College, Jonathan Edwards College, Morse College, Pauli Murray College, Pierson College, Saybrook College, Silliman College, Timothy Dwight College, and Trumbull College.\nConclusion: A private Ivy League research university moved to New Haven.",
        "output":"True",
        "fol":"Premise_FOL: PrivateIvyLeagueResearchUniversity(yaleUniversity)\nMovedTo(yaleUniversity, newHaven) \u2227 MovedIn(yaleUniversity, year1716)\nValuedAt(yaleUniversitysEndowment, 42point3billion)\n\u2200x (ResidentialCollege(x) \u2192 At(x, yale) \u2227 (BenjaminFranklinCollege(x) \u2295 BerkleyCollege(x) \u2295 BranfordCollege(x) \u2295 DavenportCollege(x) \u2295 EzraStilesCollege(x) \u2295 GraceHopperCollege(x) \u2295 JonathanEdwardsCollege(x) \u2295 MorseCollege(x) \u2295 PauliMurrayCollege(x) \u2295 PiersonCollege(x) \u2295 SaybrookCollege(x) \u2295 SillimanCollege(x) \u2295 TimothyDwightCollege(x) \u2295 TrumbullCollege(x)))\nConclusion_FOL: \u2203x (PrivateIvyLeagueResearchUniversity(x) \u2227 MovedTo(x, newHaven))"
    },
    {
        "id":"FOLIO_dev_234_664",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Yale University is a private Ivy League research university.\nYale University moved to New Haven in 1716.\nYale university's endowment was valued at $42.3 billion.\nA list of residential colleges at Yale: Benjamin Franklin College, Berkeley College, Branford College, Davenport College, Ezra Stiles College, Grace Hopper College, Jonathan Edwards College, Morse College, Pauli Murray College, Pierson College, Saybrook College, Silliman College, Timothy Dwight College, and Trumbull College.\nConclusion: Yale University has the largest university endowment of any educational institution.",
        "output":"Uncertain",
        "fol":"Premise_FOL: PrivateIvyLeagueResearchUniversity(yaleUniversity)\nMovedTo(yaleUniversity, newHaven) \u2227 MovedIn(yaleUniversity, year1716)\nValuedAt(yaleUniversitysEndowment, 42point3billion)\n\u2200x (ResidentialCollege(x) \u2192 At(x, yale) \u2227 (BenjaminFranklinCollege(x) \u2295 BerkleyCollege(x) \u2295 BranfordCollege(x) \u2295 DavenportCollege(x) \u2295 EzraStilesCollege(x) \u2295 GraceHopperCollege(x) \u2295 JonathanEdwardsCollege(x) \u2295 MorseCollege(x) \u2295 PauliMurrayCollege(x) \u2295 PiersonCollege(x) \u2295 SaybrookCollege(x) \u2295 SillimanCollege(x) \u2295 TimothyDwightCollege(x) \u2295 TrumbullCollege(x)))\nConclusion_FOL: LargestUniversityEndowmentOf(yale, anyEducationalInstitution)"
    },
    {
        "id":"FOLIO_dev_234_665",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Yale University is a private Ivy League research university.\nYale University moved to New Haven in 1716.\nYale university's endowment was valued at $42.3 billion.\nA list of residential colleges at Yale: Benjamin Franklin College, Berkeley College, Branford College, Davenport College, Ezra Stiles College, Grace Hopper College, Jonathan Edwards College, Morse College, Pauli Murray College, Pierson College, Saybrook College, Silliman College, Timothy Dwight College, and Trumbull College.\nConclusion: Pierson College is a residential college at Yale.",
        "output":"True",
        "fol":"Premise_FOL: PrivateIvyLeagueResearchUniversity(yaleUniversity)\nMovedTo(yaleUniversity, newHaven) \u2227 MovedIn(yaleUniversity, year1716)\nValuedAt(yaleUniversitysEndowment, 42point3billion)\n\u2200x (ResidentialCollege(x) \u2192 At(x, yale) \u2227 (BenjaminFranklinCollege(x) \u2295 BerkleyCollege(x) \u2295 BranfordCollege(x) \u2295 DavenportCollege(x) \u2295 EzraStilesCollege(x) \u2295 GraceHopperCollege(x) \u2295 JonathanEdwardsCollege(x) \u2295 MorseCollege(x) \u2295 PauliMurrayCollege(x) \u2295 PiersonCollege(x) \u2295 SaybrookCollege(x) \u2295 SillimanCollege(x) \u2295 TimothyDwightCollege(x) \u2295 TrumbullCollege(x)))\nConclusion_FOL: ResidentialCollege(piersonCollege) \u2227 At(piersonCollege, yale)"
    },
    {
        "id":"FOLIO_dev_120_360",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Badults is a British Sitcom series starring members of Pappy's.\nBadults was piloted in July 2013 on BBC Three.\nThe Working title \"The Secret Dude Society\" was used for Badults.\nAndrew Collins was the script editor for Badults.\nConclusion: Andrew Collins was the script editor for a series with the working title \"The Secret Dude Society\".",
        "output":"True",
        "fol":"Premise_FOL: \u2203x (BritishSitcom(badults) \u2227 Series(badults) \u2227 MemberOf(x, pappys) \u2227 Starring(badults, x))\nPilotedIn(badults, july2013) \u2227 PilotedOn(badults, bBCThree)\nWorkingTitle(theSecretDudeSociety, badults) \u2227 UsedFor(theSecretDudeSociety, badults)\nScriptEditorFor(andrewCollins, badults)\nConclusion_FOL: \u2203x (ScriptEditorFor(andrewCollins, x) \u2227 Series(x) \u2227 WorkingTitle(theSecretDudeSociety, x))"
    },
    {
        "id":"FOLIO_dev_120_361",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Badults is a British Sitcom series starring members of Pappy's.\nBadults was piloted in July 2013 on BBC Three.\nThe Working title \"The Secret Dude Society\" was used for Badults.\nAndrew Collins was the script editor for Badults.\nConclusion: No members of Pappy's have starred in a show piloting on BBC Two or BBC Three.",
        "output":"False",
        "fol":"Premise_FOL: \u2203x (BritishSitcom(badults) \u2227 Series(badults) \u2227 MemberOf(x, pappys) \u2227 Starring(badults, x))\nPilotedIn(badults, july2013) \u2227 PilotedOn(badults, bBCThree)\nWorkingTitle(theSecretDudeSociety, badults) \u2227 UsedFor(theSecretDudeSociety, badults)\nScriptEditorFor(andrewCollins, badults)\nConclusion_FOL: \u2200x \u2200y (MemberOf(x, pappys) \u2227 Starring(y, x) \u2192 \u00ac(PilotedOn(y, bBCTwo) \u2228 PilotedOn(y, bBCThree)))"
    },
    {
        "id":"FOLIO_dev_322_819",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All growth stocks are bought to earn profits from rapid price appreciation.\nIf the stock price is bought to earn profits from rapid price appreciation, then it is not suitable for a retirement fund.\nSome stocks are growth stocks.\nAll mature stocks are suitable for a retirement fund.\nKO is a mature stock.\nConclusion: KO is a stock.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (GrowthStock(x) \u2192 BoughtToEarnProfitFrom(x, rapidPriceAppreciation))\n\u2200x (BoughtToEarnProfitFrom(x, earnProfit, rapidPriceAppreciation) \u2192 \u00acSuitableFor(x, retirementFund)) \n\u2203x (Stock(x) \u2227 GrowthStock(x))\n\u2200x (MatureStock(x) \u2192 SuitableFor(x, retirementFund))\nMatureStock(kO)\nConclusion_FOL: Stock(kO)"
    },
    {
        "id":"FOLIO_dev_322_820",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All growth stocks are bought to earn profits from rapid price appreciation.\nIf the stock price is bought to earn profits from rapid price appreciation, then it is not suitable for a retirement fund.\nSome stocks are growth stocks.\nAll mature stocks are suitable for a retirement fund.\nKO is a mature stock.\nConclusion: KO is a stock and a growth stock.",
        "output":"False",
        "fol":"Premise_FOL: \u2200x (GrowthStock(x) \u2192 BoughtToEarnProfitFrom(x, rapidPriceAppreciation))\n\u2200x (BoughtToEarnProfitFrom(x, earnProfit, rapidPriceAppreciation) \u2192 \u00acSuitableFor(x, retirementFund)) \n\u2203x (Stock(x) \u2227 GrowthStock(x))\n\u2200x (MatureStock(x) \u2192 SuitableFor(x, retirementFund))\nMatureStock(kO)\nConclusion_FOL: \u00acGrowthStock(kO)"
    },
    {
        "id":"FOLIO_dev_322_821",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All growth stocks are bought to earn profits from rapid price appreciation.\nIf the stock price is bought to earn profits from rapid price appreciation, then it is not suitable for a retirement fund.\nSome stocks are growth stocks.\nAll mature stocks are suitable for a retirement fund.\nKO is a mature stock.\nConclusion: If KO is a growth stock or bought to earn profits from rapid price appreciation, then KO is neither a stock nor is its price volatile.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (GrowthStock(x) \u2192 BoughtToEarnProfitFrom(x, rapidPriceAppreciation))\n\u2200x (BoughtToEarnProfitFrom(x, earnProfit, rapidPriceAppreciation) \u2192 \u00acSuitableFor(x, retirementFund)) \n\u2203x (Stock(x) \u2227 GrowthStock(x))\n\u2200x (MatureStock(x) \u2192 SuitableFor(x, retirementFund))\nMatureStock(kO)\nConclusion_FOL: GrowthStock(kO) \u2228 BoughtToEarnProfitFrom(kO, earnProfit, rapidPriceAppreciation) \u2192 \u00acStock(kO) \u2227 \u00acBoughtToEarnProfitFrom(kO, rapidPriceAppreciation)"
    },
    {
        "id":"FOLIO_dev_83_253",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All vehicle registration plates in Istanbul begin with the number 34.\nPlates that do not begin with the number 34 are not from Istanbul. \nJoe's vehicle registration plate is from Istanbul. \nTom's license plate begins with the number 35. \nIf a license plate begins with the number 35, then it does not begin with the number 34.\nConclusion: Joe's license plate begins with the number 34.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (VehicleRegistrationPlateIn(x, istanbul) \u2192 BeginWith(x, num34))\n\u2200x (\u00acBeginWith(x, num34) \u2192 \u00acFromIstanbul(x))\n\u2203x (Owns(joe, x) \u2227 VehicleRegistrationPlateIn(x, istanbul))\n\u2203x (Owns(tom, x) \u2227 BeginWith(x, num35))\n\u2200x (BeginWith(x, num35) \u2192 \u00acBeginWith(x, num34))\nConclusion_FOL: \u2203x (Owns(joe, x) \u2227 BeginWith(x, num34))"
    },
    {
        "id":"FOLIO_dev_83_254",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All vehicle registration plates in Istanbul begin with the number 34.\nPlates that do not begin with the number 34 are not from Istanbul. \nJoe's vehicle registration plate is from Istanbul. \nTom's license plate begins with the number 35. \nIf a license plate begins with the number 35, then it does not begin with the number 34.\nConclusion: Tom's license plate is from Istanbul.",
        "output":"False",
        "fol":"Premise_FOL: \u2200x (VehicleRegistrationPlateIn(x, istanbul) \u2192 BeginWith(x, num34))\n\u2200x (\u00acBeginWith(x, num34) \u2192 \u00acFromIstanbul(x))\n\u2203x (Owns(joe, x) \u2227 VehicleRegistrationPlateIn(x, istanbul))\n\u2203x (Owns(tom, x) \u2227 BeginWith(x, num35))\n\u2200x (BeginWith(x, num35) \u2192 \u00acBeginWith(x, num34))\nConclusion_FOL: \u2203x (Owns(tom, x) \u2227 VehicleRegistrationPlateIn(x, istanbul))"
    },
    {
        "id":"FOLIO_dev_368_979",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: If people at Mary's school work in student jobs on campus, then they need to earn money to help pay for their college tuition.\nIf people at Mary's school order takeout frequently in college, then they work in student jobs on campus.\nPeople at Mary's school order takeout frequently in college or enjoy the dining hall meals and recipes.\nIf people at Mary's school enjoy the dining hall meals and recipes, then they are not picky eaters.\nIf people at Mary's school enjoy the dining hall meals and recipes, then they spend a lot of their time eating and catching up with friends in the campus dining halls.\nHannah is at Mary's school.\nHannah works in student jobs on campus and if she needs to earn money to help pay for her college tuition, then she is neither picky nor needs to earn money to help pay for her college tuition.\nConclusion: Hannah needs to earn money to help pay for her college tuition.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (At(x, marysSchool) \u2227 WorkIn(x, studentJob, campus) \u2192 NeedToEarnMoneyToHelpPayFor(x, collegeTuition))\n\u2200x (At(x, marysSchool) \u2227 OrderFrequently(x, takeout) \u2192 WorkIn(x, studentJob, campus))\n\u2200x (At(x, marysSchool) \u2227 (OrderFrequently(x, takeout) \u2228 Enjoy(x, diningHallMeal)))\n\u2200x (At(x, marysSchool) \u2227 Enjoy(x, diningHallMeal) \u2192 \u00acPickyEater(x))\n\u2200x (At(x, marysSchool) \u2227 Enjoy(x, diningHallMeal) \u2192 Spend(x, aLotOfTime, eating) \u2227 Spend(x, aLotOfTime, catchingUpWithFriends, diningHall))\nAt(hannah, marysSchool)\n(WorkIn(hannah, studentJob, campus) \u2227 NeedToEarnMoneyToHelpPayFor(hannah, collegeTuition) \u2192 \u00ac(PickyEater(hannah) \u2228 NeedToEarnMoneyToHelpPayFor(hannah, collegeTuition))\nConclusion_FOL: NeedToEarnMoneyToHelpPayFor(hannah, collegeTuition)"
    },
    {
        "id":"FOLIO_dev_368_980",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: If people at Mary's school work in student jobs on campus, then they need to earn money to help pay for their college tuition.\nIf people at Mary's school order takeout frequently in college, then they work in student jobs on campus.\nPeople at Mary's school order takeout frequently in college or enjoy the dining hall meals and recipes.\nIf people at Mary's school enjoy the dining hall meals and recipes, then they are not picky eaters.\nIf people at Mary's school enjoy the dining hall meals and recipes, then they spend a lot of their time eating and catching up with friends in the campus dining halls.\nHannah is at Mary's school.\nHannah works in student jobs on campus and if she needs to earn money to help pay for her college tuition, then she is neither picky nor needs to earn money to help pay for her college tuition.\nConclusion: Hannah is at Mary's school and she is not a picky eater and spends a lot of her time eating and catching up with friends in the campus dining halls.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (At(x, marysSchool) \u2227 WorkIn(x, studentJob, campus) \u2192 NeedToEarnMoneyToHelpPayFor(x, collegeTuition))\n\u2200x (At(x, marysSchool) \u2227 OrderFrequently(x, takeout) \u2192 WorkIn(x, studentJob, campus))\n\u2200x (At(x, marysSchool) \u2227 (OrderFrequently(x, takeout) \u2228 Enjoy(x, diningHallMeal)))\n\u2200x (At(x, marysSchool) \u2227 Enjoy(x, diningHallMeal) \u2192 \u00acPickyEater(x))\n\u2200x (At(x, marysSchool) \u2227 Enjoy(x, diningHallMeal) \u2192 Spend(x, aLotOfTime, eating) \u2227 Spend(x, aLotOfTime, catchingUpWithFriends, diningHall))\nAt(hannah, marysSchool)\n(WorkIn(hannah, studentJob, campus) \u2227 NeedToEarnMoneyToHelpPayFor(hannah, collegeTuition) \u2192 \u00ac(PickyEater(hannah) \u2228 NeedToEarnMoneyToHelpPayFor(hannah, collegeTuition))\nConclusion_FOL: \u00ac(PickyEater(hannah) \u2227 Spend(hannah, aLotOfTime, eating) \u2227 Spend(hannah, aLotOfTime, catchingUpWithFriends, diningHall))"
    },
    {
        "id":"FOLIO_dev_368_981",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: If people at Mary's school work in student jobs on campus, then they need to earn money to help pay for their college tuition.\nIf people at Mary's school order takeout frequently in college, then they work in student jobs on campus.\nPeople at Mary's school order takeout frequently in college or enjoy the dining hall meals and recipes.\nIf people at Mary's school enjoy the dining hall meals and recipes, then they are not picky eaters.\nIf people at Mary's school enjoy the dining hall meals and recipes, then they spend a lot of their time eating and catching up with friends in the campus dining halls.\nHannah is at Mary's school.\nHannah works in student jobs on campus and if she needs to earn money to help pay for her college tuition, then she is neither picky nor needs to earn money to help pay for her college tuition.\nConclusion: Hannah is at Mary's school and she either is not a picky eater or, if she is, then she spends a lot of her time eating and catching up with friends in the campus dining halls.",
        "output":"False",
        "fol":"Premise_FOL: \u2200x (At(x, marysSchool) \u2227 WorkIn(x, studentJob, campus) \u2192 NeedToEarnMoneyToHelpPayFor(x, collegeTuition))\n\u2200x (At(x, marysSchool) \u2227 OrderFrequently(x, takeout) \u2192 WorkIn(x, studentJob, campus))\n\u2200x (At(x, marysSchool) \u2227 (OrderFrequently(x, takeout) \u2228 Enjoy(x, diningHallMeal)))\n\u2200x (At(x, marysSchool) \u2227 Enjoy(x, diningHallMeal) \u2192 \u00acPickyEater(x))\n\u2200x (At(x, marysSchool) \u2227 Enjoy(x, diningHallMeal) \u2192 Spend(x, aLotOfTime, eating) \u2227 Spend(x, aLotOfTime, catchingUpWithFriends, diningHall))\nAt(hannah, marysSchool)\n(WorkIn(hannah, studentJob, campus) \u2227 NeedToEarnMoneyToHelpPayFor(hannah, collegeTuition) \u2192 \u00ac(PickyEater(hannah) \u2228 NeedToEarnMoneyToHelpPayFor(hannah, collegeTuition))\nConclusion_FOL: PickyEater(hannah) \u2295 (Spend(hannah, aLotOfTime, eating) \u2227 Spend(hannah, aLotOfTime, catchingUpWithFriends, diningHall))"
    },
    {
        "id":"FOLIO_dev_319_805",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: No baked sweets are spicy.\nAll cupcakes are baked sweets.\nAll mala hotpots are spicy.\nAll products from Baked by Melissa are cupcakes.\nDried Thai chilies are spicy or mala hotpots or not baked sweets.\nConclusion: Dried Thai chilies are products of Baked by Melissa.",
        "output":"False",
        "fol":"Premise_FOL: \u2200x (BakedSweet(x) \u2192 \u00acSpicy(x))\n\u2200x (Cupcake(x) \u2192 BakedSweet(x))\n\u2200x (MalaHotpot(x) \u2192 Spicy(x))\n\u2200x (Product(x) \u2227 From(x, bakedByMelissa) \u2192 Cupcake(x))\nSpicy(driedThaiChili) \u2228 MalaHotpot(driedThaiChili)\u2228 \u00acBakedSweet(driedThaiChili)\nConclusion_FOL: Product(driedThaiChili) \u2227 From(driedThaiChili, bakedByMelissa)"
    },
    {
        "id":"FOLIO_dev_319_806",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: No baked sweets are spicy.\nAll cupcakes are baked sweets.\nAll mala hotpots are spicy.\nAll products from Baked by Melissa are cupcakes.\nDried Thai chilies are spicy or mala hotpots or not baked sweets.\nConclusion: Dried Thai chilies are not products of Baked by Melissa.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (BakedSweet(x) \u2192 \u00acSpicy(x))\n\u2200x (Cupcake(x) \u2192 BakedSweet(x))\n\u2200x (MalaHotpot(x) \u2192 Spicy(x))\n\u2200x (Product(x) \u2227 From(x, bakedByMelissa) \u2192 Cupcake(x))\nSpicy(driedThaiChili) \u2228 MalaHotpot(driedThaiChili)\u2228 \u00acBakedSweet(driedThaiChili)\nConclusion_FOL: \u00ac(Product(driedThaiChili) \u2227 From(driedThaiChili, bakedByMelissa))"
    },
    {
        "id":"FOLIO_dev_319_807",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: No baked sweets are spicy.\nAll cupcakes are baked sweets.\nAll mala hotpots are spicy.\nAll products from Baked by Melissa are cupcakes.\nDried Thai chilies are spicy or mala hotpots or not baked sweets.\nConclusion: Dried Thai chilies are a mala hotpot.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (BakedSweet(x) \u2192 \u00acSpicy(x))\n\u2200x (Cupcake(x) \u2192 BakedSweet(x))\n\u2200x (MalaHotpot(x) \u2192 Spicy(x))\n\u2200x (Product(x) \u2227 From(x, bakedByMelissa) \u2192 Cupcake(x))\nSpicy(driedThaiChili) \u2228 MalaHotpot(driedThaiChili)\u2228 \u00acBakedSweet(driedThaiChili)\nConclusion_FOL: MalaHotpot(driedThaiChili)"
    },
    {
        "id":"FOLIO_dev_319_808",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: No baked sweets are spicy.\nAll cupcakes are baked sweets.\nAll mala hotpots are spicy.\nAll products from Baked by Melissa are cupcakes.\nDried Thai chilies are spicy or mala hotpots or not baked sweets.\nConclusion: Dried Thai chilies are neither products of Baked by Melissa nor baked sweets.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (BakedSweet(x) \u2192 \u00acSpicy(x))\n\u2200x (Cupcake(x) \u2192 BakedSweet(x))\n\u2200x (MalaHotpot(x) \u2192 Spicy(x))\n\u2200x (Product(x) \u2227 From(x, bakedByMelissa) \u2192 Cupcake(x))\nSpicy(driedThaiChili) \u2228 MalaHotpot(driedThaiChili)\u2228 \u00acBakedSweet(driedThaiChili)\nConclusion_FOL: \u00ac(Product(driedThaiChili) \u2227 From(driedThaiChili, bakedByMelissa)) \u2227 \u00acBakedSweet(driedThaiChili)"
    },
    {
        "id":"FOLIO_dev_319_809",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: No baked sweets are spicy.\nAll cupcakes are baked sweets.\nAll mala hotpots are spicy.\nAll products from Baked by Melissa are cupcakes.\nDried Thai chilies are spicy or mala hotpots or not baked sweets.\nConclusion: Dried Thai chilies are cupcakes and products of Baked by Melissa.",
        "output":"False",
        "fol":"Premise_FOL: \u2200x (BakedSweet(x) \u2192 \u00acSpicy(x))\n\u2200x (Cupcake(x) \u2192 BakedSweet(x))\n\u2200x (MalaHotpot(x) \u2192 Spicy(x))\n\u2200x (Product(x) \u2227 From(x, bakedByMelissa) \u2192 Cupcake(x))\nSpicy(driedThaiChili) \u2228 MalaHotpot(driedThaiChili)\u2228 \u00acBakedSweet(driedThaiChili)\nConclusion_FOL: Cupcake(driedThaiChili) \u2227 Product(driedThaiChili) \u2227 From(driedThaiChili, bakedByMelissa)"
    },
    {
        "id":"FOLIO_dev_306_754",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: If a restaurant is listed in Yelp\u2019s recommendations, then the restaurant has not received many negative reviews.\nAll restaurants with a rating greater than four are listed in Yelp\u2019s recommendations.\nSome restaurants that do not provide take-out service receive many negative reviews.\nAll restaurants that are popular among local residents have ratings greater than four.\nThe Hamden Plaza Subway store has a rating greater than four, or it is popular among local residents.\nConclusion: If the Hamden Plaza Subway store provides take-out service and receives many negative reviews, then its rating is greater than 4 and it does not provide take-out service.",
        "output":"False",
        "fol":"Premise_FOL: \u2200x \u2203y (ListedIn(x, yelpRecommendation) \u2192 NegativeReview(y) \u2227 \u00acReceive(x, y))\n\u2200x \u2200y (HaveRating(x, y) \u2227 GreaterThan(y, 4) \u2192 ListedIn(x, yelpRecommendation))\n\u2203x \u2203y (\u00acProvide(x, takeOutService) \u2192 NegativeReview(y) \u2227 Receive(x, y))\n\u2200x \u2200y (PopularAmong(x, localResidents) \u2192 HaveRating(x, y) \u2227 GreaterThan(y, 4))\n\u2200x (HaveRating(hamdenPlazaSubway, x) \u2227 GreaterThan(x, 4) \u2295 PopularAmong(hamdenPlazaSubway, localResidents))\nConclusion_FOL: \u2203x ((TakeOutService(hamdenPlazaSubway) \u2227 NegativeReview(x) \u2227 Receive(hamdenPlazaSubway, x) \u2192 PopularAmong(hamdenPlazaSubway, localResidents) \u2227 \u00acProvide(hamdenPlazaSubway, takeOutService))"
    },
    {
        "id":"FOLIO_dev_306_755",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: If a restaurant is listed in Yelp\u2019s recommendations, then the restaurant has not received many negative reviews.\nAll restaurants with a rating greater than four are listed in Yelp\u2019s recommendations.\nSome restaurants that do not provide take-out service receive many negative reviews.\nAll restaurants that are popular among local residents have ratings greater than four.\nThe Hamden Plaza Subway store has a rating greater than four, or it is popular among local residents.\nConclusion: The Hamden Plaza Subway store provides take-out service or does not receive many negative reviews.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x \u2203y (ListedIn(x, yelpRecommendation) \u2192 NegativeReview(y) \u2227 \u00acReceive(x, y))\n\u2200x \u2200y (HaveRating(x, y) \u2227 GreaterThan(y, 4) \u2192 ListedIn(x, yelpRecommendation))\n\u2203x \u2203y (\u00acProvide(x, takeOutService) \u2192 NegativeReview(y) \u2227 Receive(x, y))\n\u2200x \u2200y (PopularAmong(x, localResidents) \u2192 HaveRating(x, y) \u2227 GreaterThan(y, 4))\n\u2200x (HaveRating(hamdenPlazaSubway, x) \u2227 GreaterThan(x, 4) \u2295 PopularAmong(hamdenPlazaSubway, localResidents))\nConclusion_FOL: \u2203x (Provide(hamdenPlazaSubway, takeOutService) \u2228 (NegativeReview(x) \u2227 \u00acReceive(hamdenPlazaSubway, x)))"
    },
    {
        "id":"FOLIO_dev_306_756",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: If a restaurant is listed in Yelp\u2019s recommendations, then the restaurant has not received many negative reviews.\nAll restaurants with a rating greater than four are listed in Yelp\u2019s recommendations.\nSome restaurants that do not provide take-out service receive many negative reviews.\nAll restaurants that are popular among local residents have ratings greater than four.\nThe Hamden Plaza Subway store has a rating greater than four, or it is popular among local residents.\nConclusion: The Hamden Plaza store does not provide take-out service.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x \u2203y (ListedIn(x, yelpRecommendation) \u2192 NegativeReview(y) \u2227 \u00acReceive(x, y))\n\u2200x \u2200y (HaveRating(x, y) \u2227 GreaterThan(y, 4) \u2192 ListedIn(x, yelpRecommendation))\n\u2203x \u2203y (\u00acProvide(x, takeOutService) \u2192 NegativeReview(y) \u2227 Receive(x, y))\n\u2200x \u2200y (PopularAmong(x, localResidents) \u2192 HaveRating(x, y) \u2227 GreaterThan(y, 4))\n\u2200x (HaveRating(hamdenPlazaSubway, x) \u2227 GreaterThan(x, 4) \u2295 PopularAmong(hamdenPlazaSubway, localResidents))\nConclusion_FOL: \u00acProvide(hamdenPlazaSubway, takeOutService)"
    },
    {
        "id":"FOLIO_dev_245_688",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: In superhero movies, the good guys always win.\nThe Surprising Adventures of Sir Digby Chicken Caesar is a superhero movie.\nGood guys fight bad guys and vice versa.\nSir Digby fights his nemesis.\nIf a superhero movie is named after a character, that character is a good guy.\nThe Surprising Adventures of Sir Digby Chicken Caesar is named after Sir Digby.\nIf somebody wins a fight, the person they are fighting does not win.\nIf a superhero movie is named after a character, that character is in the movie.\nConclusion: Sir Digby\u2019s nemesis does not win.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x \u2200y (SuperheroMovie(x) \u2227 In(y, x) \u2227 GoodGuy(y) \u2192 Wins(y))\nSuperheroMovie(theSurprisingAdventuresofSirDigbyChickenCaesar)\n\u2200x \u2200y (GoodGuy(x) \u2227 Fight(x, y) \u27f7 BadGuy(y) \u2227 Fight(y, x))\nFight(sirDigby, sirDigbysNemesis)\n\u2200x \u2200y (SuperheroMovie(x) \u2227 NamedAfter(x, y) \u2192 GoodGuy(y))\nNamedAfter(theSurprisingAdventuresofSirDigbyChickenCaesar, sirDigby)\n\u2200x \u2200y (Fights(x, y) \u2227 Win(x) \u2192 \u00acWins(y))\n\u2200x \u2200y (SuperheroMovie(x) \u2227 NamedAfter(x, y) \u2192 In(y, x))\nConclusion_FOL: \u00acWin(sirDigbysNemesis)"
    },
    {
        "id":"FOLIO_dev_58_171",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Books contain tons of knowledge.\nWhen a person reads a book, that person gains knowledge. \nIf a person gains knowledge, they become smarter.\nHarry read the book \u201cWalden\u201d by Henry Thoreau.\nConclusion: Walden contains knowledge.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (Book(x) \u2192 Contains(x, knowledge))\n\u2200x \u2200y (ReadBook(x, y) \u2192 Gains(x, knowledge))\n\u2200x (Gains(x, knowledge) \u2192 Smarter(x))\nReadBook(harry, walden) \u2227 Book(walden)\nConclusion_FOL: Gains(harry, knowledge)"
    },
    {
        "id":"FOLIO_dev_58_172",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Books contain tons of knowledge.\nWhen a person reads a book, that person gains knowledge. \nIf a person gains knowledge, they become smarter.\nHarry read the book \u201cWalden\u201d by Henry Thoreau.\nConclusion: Harry is smarter than before.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (Book(x) \u2192 Contains(x, knowledge))\n\u2200x \u2200y (ReadBook(x, y) \u2192 Gains(x, knowledge))\n\u2200x (Gains(x, knowledge) \u2192 Smarter(x))\nReadBook(harry, walden) \u2227 Book(walden)\nConclusion_FOL: Smarter(harry)"
    },
    {
        "id":"FOLIO_dev_58_173",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Books contain tons of knowledge.\nWhen a person reads a book, that person gains knowledge. \nIf a person gains knowledge, they become smarter.\nHarry read the book \u201cWalden\u201d by Henry Thoreau.\nConclusion: A smarter person has gained knowledge.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (Book(x) \u2192 Contains(x, knowledge))\n\u2200x \u2200y (ReadBook(x, y) \u2192 Gains(x, knowledge))\n\u2200x (Gains(x, knowledge) \u2192 Smarter(x))\nReadBook(harry, walden) \u2227 Book(walden)\nConclusion_FOL: \u2200x (Smarter(x) \u2192 GainKnowledge(x))"
    },
    {
        "id":"FOLIO_dev_191_546",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: A natural language processing task can be categorized as either a language generation task or a language understanding task.\nIf the output of a natural language processing task is a text sequence, then it is a language generation task.\nMachine translation is a natural language processing task.\nThe output of machine translation is a text sequence.\nConclusion: Machine translation is a language generation task.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (NaturalLanguageProcessingTask(x) \u2192 LanguageGenerationTask(x) \u2295 LanguageUnderstandingTask(x))\n\u2200x (NaturalLanguageProcessingTasks(x) \u2227 OutputSequence(x, text) \u2192 LanguageGenerationTask(x))\nNaturalLanguageProcessingTask(machineTranslation)\nOutputSequence(machineTranslation, text)\nConclusion_FOL: LanguageGenerationTask(machineTranslation)"
    },
    {
        "id":"FOLIO_dev_191_547",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: A natural language processing task can be categorized as either a language generation task or a language understanding task.\nIf the output of a natural language processing task is a text sequence, then it is a language generation task.\nMachine translation is a natural language processing task.\nThe output of machine translation is a text sequence.\nConclusion: Machine translation is a language understanding task.",
        "output":"False",
        "fol":"Premise_FOL: \u2200x (NaturalLanguageProcessingTask(x) \u2192 LanguageGenerationTask(x) \u2295 LanguageUnderstandingTask(x))\n\u2200x (NaturalLanguageProcessingTasks(x) \u2227 OutputSequence(x, text) \u2192 LanguageGenerationTask(x))\nNaturalLanguageProcessingTask(machineTranslation)\nOutputSequence(machineTranslation, text)\nConclusion_FOL: LanguageUnderstandingTask(machineTranslation)"
    },
    {
        "id":"FOLIO_dev_166_476",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Pets are allowed in some managed buildings.\nA deposit is required to rent an apartment in a managed building.\nThe security deposit can be either equal to the monthly rent at a managed building or more.\nFluffy is Tom's cat.\nCats are pets.\nThe Olive Garden is a managed building.\nThe monthly rent at the Olive Garden is $2000.\n$2000 is more than $1500.\nTom will rent an apartment in a managed building if he is allowed to move in with Fluffy, and the security deposit is no more than $1500.\nIf a managed building allows pets, then people are allowed to move in with a pet. \nConclusion: Tom will rent an apartment in The Olive Garden.",
        "output":"False",
        "fol":"Premise_FOL: \u2203x (ManagedBuilding(x) \u2227 AllowPet(x))\n\u2200x \u2200y (ManagedBuilding(x) \u2227 RentApartmentIn(y, x) \u2192 DepositRequired(y))\n\u2200x \u2200y \u2200z (SecurityDeposit(x) \u2227 ManagedBuilding(z) \u2227 MonthlyRentAt(y, z) \u2192 (MoreThan(x, y) \u2295 Equal(x, y))\nCat(fluffy) \u2227 BelongTo(fluffy, tom)\n\u2200x (Cat(x) \u2192 Pet(x))\nManagedBuilding(oliveGarden)\nMonthlyRentAt(uSD2000, oliveGarden)\nMoreThan(uSD2000, uSD1500)\n\u2200x \u2200y (ManagedBuilding(x) \u2227 AllowedToMoveInWith(tom, x, fluffy) \u2227 SecurityDeposit(y) \u2227 \u00acMoreThan(y, uSD1500) \u2192 RentApartmentIn(tom, x))\n\u2200x \u2200y \u2200z (ManagedBuilding(x) \u2227 AllowPet(x) \u2227 Pet(z) \u2192 AllowedToMoveInWith(y, x, z))\nConclusion_FOL: RentApartmentIn(tom, oliveGarden)"
    },
    {
        "id":"FOLIO_dev_166_477",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Pets are allowed in some managed buildings.\nA deposit is required to rent an apartment in a managed building.\nThe security deposit can be either equal to the monthly rent at a managed building or more.\nFluffy is Tom's cat.\nCats are pets.\nThe Olive Garden is a managed building.\nThe monthly rent at the Olive Garden is $2000.\n$2000 is more than $1500.\nTom will rent an apartment in a managed building if he is allowed to move in with Fluffy, and the security deposit is no more than $1500.\nIf a managed building allows pets, then people are allowed to move in with a pet. \nConclusion: Tom is allowed to move into an apartment in The Olive Garden with Fluffy.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2203x (ManagedBuilding(x) \u2227 AllowPet(x))\n\u2200x \u2200y (ManagedBuilding(x) \u2227 RentApartmentIn(y, x) \u2192 DepositRequired(y))\n\u2200x \u2200y \u2200z (SecurityDeposit(x) \u2227 ManagedBuilding(z) \u2227 MonthlyRentAt(y, z) \u2192 (MoreThan(x, y) \u2295 Equal(x, y))\nCat(fluffy) \u2227 BelongTo(fluffy, tom)\n\u2200x (Cat(x) \u2192 Pet(x))\nManagedBuilding(oliveGarden)\nMonthlyRentAt(uSD2000, oliveGarden)\nMoreThan(uSD2000, uSD1500)\n\u2200x \u2200y (ManagedBuilding(x) \u2227 AllowedToMoveInWith(tom, x, fluffy) \u2227 SecurityDeposit(y) \u2227 \u00acMoreThan(y, uSD1500) \u2192 RentApartmentIn(tom, x))\n\u2200x \u2200y \u2200z (ManagedBuilding(x) \u2227 AllowPet(x) \u2227 Pet(z) \u2192 AllowedToMoveInWith(y, x, z))\nConclusion_FOL: AllowedToMoveInWith(tom, oliveGarden, fluffy)"
    },
    {
        "id":"FOLIO_dev_166_478",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Pets are allowed in some managed buildings.\nA deposit is required to rent an apartment in a managed building.\nThe security deposit can be either equal to the monthly rent at a managed building or more.\nFluffy is Tom's cat.\nCats are pets.\nThe Olive Garden is a managed building.\nThe monthly rent at the Olive Garden is $2000.\n$2000 is more than $1500.\nTom will rent an apartment in a managed building if he is allowed to move in with Fluffy, and the security deposit is no more than $1500.\nIf a managed building allows pets, then people are allowed to move in with a pet. \nConclusion: The security deposit at the Olive Garden is either $2000 or more.",
        "output":"True",
        "fol":"Premise_FOL: \u2203x (ManagedBuilding(x) \u2227 AllowPet(x))\n\u2200x \u2200y (ManagedBuilding(x) \u2227 RentApartmentIn(y, x) \u2192 DepositRequired(y))\n\u2200x \u2200y \u2200z (SecurityDeposit(x) \u2227 ManagedBuilding(z) \u2227 MonthlyRentAt(y, z) \u2192 (MoreThan(x, y) \u2295 Equal(x, y))\nCat(fluffy) \u2227 BelongTo(fluffy, tom)\n\u2200x (Cat(x) \u2192 Pet(x))\nManagedBuilding(oliveGarden)\nMonthlyRentAt(uSD2000, oliveGarden)\nMoreThan(uSD2000, uSD1500)\n\u2200x \u2200y (ManagedBuilding(x) \u2227 AllowedToMoveInWith(tom, x, fluffy) \u2227 SecurityDeposit(y) \u2227 \u00acMoreThan(y, uSD1500) \u2192 RentApartmentIn(tom, x))\n\u2200x \u2200y \u2200z (ManagedBuilding(x) \u2227 AllowPet(x) \u2227 Pet(z) \u2192 AllowedToMoveInWith(y, x, z))\nConclusion_FOL: \u2200x (SecurityDeposit(x, oliveGarden) \u2192 MoreThan(x, uSD2000) \u2295 Equal(x, uSD2000))"
    },
    {
        "id":"FOLIO_dev_352_933",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All business organizations are legal entities.\nAll companies are business organizations.\nAll private companies are companies.\nAll legal entities are created under law. \nAll legal entities have legal obligations.\nIf the Harvard Weekly Book Club is created under law, then it is not a private company. \nConclusion: The Harvard Weekly Book club has legal obligations.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (BusinessOrganization(x) \u2192 LegalEntity(x))\n\u2200x (Company(x) \u2192 BusinessOrganization(x))\n\u2200x (PrivateCompany(x) \u2192 Company(x))\n\u2200x (LegalEntity(x) \u2192 CreatedUnderLaw(x))\n\u2200x (LegalEntity(x) \u2192 LegalObligation(x))\nCreatedUnderLaw(harvardWeeklyBookClub) \u2192 \u00acPrivateCompany(harvardWeeklyBookClub)\nConclusion_FOL: LegalObligation(harvardWeeklyBookClub)"
    },
    {
        "id":"FOLIO_dev_352_934",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All business organizations are legal entities.\nAll companies are business organizations.\nAll private companies are companies.\nAll legal entities are created under law. \nAll legal entities have legal obligations.\nIf the Harvard Weekly Book Club is created under law, then it is not a private company. \nConclusion: The Harvard Weekly Book club has legal obligations and is a private company.",
        "output":"False",
        "fol":"Premise_FOL: \u2200x (BusinessOrganization(x) \u2192 LegalEntity(x))\n\u2200x (Company(x) \u2192 BusinessOrganization(x))\n\u2200x (PrivateCompany(x) \u2192 Company(x))\n\u2200x (LegalEntity(x) \u2192 CreatedUnderLaw(x))\n\u2200x (LegalEntity(x) \u2192 LegalObligation(x))\nCreatedUnderLaw(harvardWeeklyBookClub) \u2192 \u00acPrivateCompany(harvardWeeklyBookClub)\nConclusion_FOL: LegalObligation(harvardWeeklyBookClub) \u2227 PrivateCompany(harvardWeeklyBookClub)"
    },
    {
        "id":"FOLIO_dev_352_935",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: All business organizations are legal entities.\nAll companies are business organizations.\nAll private companies are companies.\nAll legal entities are created under law. \nAll legal entities have legal obligations.\nIf the Harvard Weekly Book Club is created under law, then it is not a private company. \nConclusion: If the Harvard Weekly Book club is a private company, then it either has legal obligations or is created under law.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (BusinessOrganization(x) \u2192 LegalEntity(x))\n\u2200x (Company(x) \u2192 BusinessOrganization(x))\n\u2200x (PrivateCompany(x) \u2192 Company(x))\n\u2200x (LegalEntity(x) \u2192 CreatedUnderLaw(x))\n\u2200x (LegalEntity(x) \u2192 LegalObligation(x))\nCreatedUnderLaw(harvardWeeklyBookClub) \u2192 \u00acPrivateCompany(harvardWeeklyBookClub)\nConclusion_FOL: PrivateCompany(harvardWeeklyBookClub) \u2192 LegalObligation(harvardWeeklyBookClub) \u2295 CreatedUnderLaw(harvardWeeklyBookClub)"
    },
    {
        "id":"FOLIO_dev_472_1366",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Animals are either invertebrates or vertebrates.\nAll animals with backbones reproduce by male-and-female mating. \nAll vertebrate animals have a backbone.\nAll bees do not reproduce by male-and-female mating.\nAll queen bees are bees.\nHarry is a bee.\nConclusion: Harry is a queen bee.",
        "output":"Uncertain",
        "fol":"Premise_FOL: \u2200x (Animal(x) \u2192 Invertebrate(x) \u2295 Vertebrate(x))\n\u2200x (Animal(x) \u2227 With(x, backbone) \u2192 ReproduceBy(x, male-and-femaleMating))\n\u2200x (Animal(x) \u2227 Vertebrate(x) \u2192 With(x, backbone))\n\u2200x (Bee(x) \u2192 \u00acReproduceBy(x, male-and-femaleMating))\n\u2200x (QueenBee(x) \u2192 Bee(x))\nBee(harry)\nConclusion_FOL: QueenBee(harry)"
    },
    {
        "id":"FOLIO_dev_472_1367",
        "instruction":"Given a premise, you have to reason whether the conclusion is True, False or Uncertain.",
        "input":"Premise: Animals are either invertebrates or vertebrates.\nAll animals with backbones reproduce by male-and-female mating. \nAll vertebrate animals have a backbone.\nAll bees do not reproduce by male-and-female mating.\nAll queen bees are bees.\nHarry is a bee.\nConclusion: Harry is an invertebrate or a queen bee.",
        "output":"True",
        "fol":"Premise_FOL: \u2200x (Animal(x) \u2192 Invertebrate(x) \u2295 Vertebrate(x))\n\u2200x (Animal(x) \u2227 With(x, backbone) \u2192 ReproduceBy(x, male-and-femaleMating))\n\u2200x (Animal(x) \u2227 Vertebrate(x) \u2192 With(x, backbone))\n\u2200x (Bee(x) \u2192 \u00acReproduceBy(x, male-and-femaleMating))\n\u2200x (QueenBee(x) \u2192 Bee(x))\nBee(harry)\nConclusion_FOL: Invertebrate(harry) \u2228 QueenBee(harry)"
    }
]